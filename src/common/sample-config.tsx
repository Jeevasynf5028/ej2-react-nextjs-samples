export const category: any = {"uploader": {"default":{"name":"Default Functionalities","category":"File Upload"},"chunk-upload":{"name":"Chunk Upload","category":"File Upload"},"custom-file-list":{"name":"Template","category":"File Upload"},"preload-files":{"name":"Preload files","category":"File Upload"},"file-validation":{"name":"File Validation","category":"File Upload"},"image-preview":{"name":"Image Preview","category":"File Upload"},"file-upload-with-forms":{"name":"Form Support","category":"File Upload"},"custom-drop-area":{"name":"Custom Drop Area","category":"File Upload"},"defaultSample":"uploader/default"},
"treeview": {"default":{"name":"Default Functionalities","category":"TreeView"},"icons":{"name":"Icons and Images","category":"TreeView"},"check-box":{"name":"Checkbox","category":"TreeView"},"node-editing":{"name":"Node Editing","category":"TreeView"},"multiple-selection":{"name":"Multiple Selection","category":"TreeView"},"drag-and-drop":{"name":"Drag and Drop","category":"TreeView"},"template":{"name":"Template","category":"TreeView"},"local-data":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"defaultSample":"treeview/default"},
"treemap": {"default":{"name":"Default Functionalities","category":"TreeMap"},"layout":{"name":"Layout","category":"TreeMap"},"drilldown":{"name":"Drilldown","category":"TreeMap"},"customization":{"name":"Customization","category":"TreeMap"},"label":{"name":"Data Label","category":"TreeMap"},"tooltip":{"name":"Tooltip","category":"TreeMap"},"election":{"name":"Legend","category":"TreeMap"},"color-mapping":{"name":"Color Mapping","category":"TreeMap"},"selection":{"name":"Selection & Highlight","category":"TreeMap"},"print":{"name":"Print & Export","category":"TreeMap"},"pie":{"name":"Treemap with Pie","category":"TreeMap"},"rtl":{"name":"RTL","category":"TreeMap"},"defaultSample":"treemap/default"},
"treegrid": {"treegrid-overview":{"name":"Overview","category":"Tree Grid"},"live-data":{"name":"Live Data","category":"Tree Grid"},"default":{"name":"Default Functionalities","category":"Tree Grid"},"adaptive":{"name":"Adaptive Layout ","category":"Tree Grid"},"loading-animation":{"name":"Loading Animation","category":"Tree Grid"},"localdata":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"selfreference":{"name":"Self Reference Data","category":"Data Binding"},"columntemplate":{"name":"Column Template","category":"Columns"},"header-template":{"name":"Header Template","category":"Columns"},"drag-anddrop":{"name":"Drag and Drop","category":"Rows"},"aggregate-default":{"name":"Default Aggregate","category":"Aggregates"},"defaultSample":"treegrid/treegrid-overview"},
"tooltip": {"default":{"name":"Default Functionalities","category":"Tooltip"},"template":{"name":"Template","category":"Tooltip"},"ajaxcontent":{"name":"Ajax Content","category":"Tooltip"},"smartposition":{"name":"Smart Positioning","category":"Tooltip"},"tooltip-menu":{"name":"Tooltip Menu","category":"Tooltip"},"html-content":{"name":"HTML Content","category":"Tooltip"},"api":{"name":"API","category":"Tooltip"},"defaultSample":"tooltip/default"},
"toolbar": {"default":{"name":"Default Functionalities","category":"Toolbar"},"popup":{"name":"Popup","category":"Toolbar"},"template":{"name":"Template","category":"Toolbar"},"alignment":{"name":"Alignment","category":"Toolbar"},"keyboard-interaction":{"name":"Keyboard Interaction","category":"Toolbar"},"defaultSample":"toolbar/default"},
"toast": {"default":{"name":"Default","category":"Toast"},"types":{"name":"Types","category":"Toast"},"templates":{"name":"Templates","category":"Toast"},"positions":{"name":"Positions","category":"Toast"},"api":{"name":"API","category":"Toast"},"defaultSample":"toast/default"},
"timepicker": {"default":{"name":"Default Functionalities","category":"TimePicker"},"time-range":{"name":"Time Range","category":"TimePicker"},"time-format":{"name":"Format","category":"TimePicker"},"list-formatting":{"name":"Time Duration","category":"TimePicker"},"input-mask":{"name":"Mask Support","category":"TimePicker"},"defaultSample":"timepicker/default"},
"timeline": {"default":{"name":"Default Functionalities","category":"Timeline"},"api":{"name":"API","category":"Timeline"},"template":{"name":"Template","category":"Timeline"},"defaultSample":"timeline/default"},
"three-dimension-circular-chart": {"pie":{"name":"Pie","category":"3D Circular Chart"},"donut":{"name":"Donut","category":"3D Circular Chart"},"pie-legend":{"name":"Pie with Legend","category":"3D Circular Chart"},"pie-radius":{"name":"Pie with Various Radius","category":"3D Circular Chart"},"selection":{"name":"Selection","category":"3D Circular Chart"},"defaultSample":"three-dimension-circular-chart/pie"},
"three-dimension-chart": {"column":{"name":"Column","category":"3D Chart"},"column-placement":{"name":"Back to Back Column","category":"3D Chart"},"cylindrical-column":{"name":"Cylindrical Column","category":"3D Chart"},"bar":{"name":"Bar","category":"3D Chart"},"stacked-column":{"name":"Stacking Column with Grouping","category":"3D Chart"},"stacked-column100":{"name":"100% Stacked Column","category":"3D Chart"},"stacked-bar":{"name":"Stacked Bar","category":"3D Chart"},"stacked-bar100":{"name":"100% Stacked Bar","category":"3D Chart"},"empty-point":{"name":"Column with null and 0 values","category":"3D Chart"},"defaultSample":"three-dimension-chart/column"},
"textboxes": {"default":{"name":"Default Functionalities","category":"TextBox"},"multiline":{"name":"Multiline TextBox","category":"TextBox"},"defaultSample":"textboxes/default"},
"textarea": {"default":{"name":"Default Functionalities","category":"TextArea"},"floating-label":{"name":"Floating Label","category":"TextArea"},"resize":{"name":"Resize","category":"TextArea"},"api":{"name":"API","category":"TextArea"},"defaultSample":"textarea/default"},
"tab": {"default":{"name":"Default Functionalities","category":"Tabs"},"orientation":{"name":"Orientation","category":"Tabs"},"responsive-modes":{"name":"Responsive Modes","category":"Tabs"},"wizard":{"name":"Wizard","category":"Tabs"},"drag-and-drop":{"name":"Drag and Drop","category":"Tabs"},"keyboard-interaction":{"name":"Keyboard Interaction","category":"Tabs"},"defaultSample":"tab/default"},
"stock-chart": {"default":{"name":"Default","category":"Stock Chart"},"ohlc":{"name":"OHLC","category":"Stock Chart"},"multi-pane":{"name":"Candlestick and volume","category":"Stock Chart"},"multiple-series":{"name":"Multiple Series","category":"Stock Chart"},"spline":{"name":"Spline","category":"Stock Chart"},"area":{"name":"Area","category":"Stock Chart"},"inversed-area":{"name":"Inversed Area","category":"Stock Chart"},"period-customization":{"name":"Intraday","category":"Stock Chart"},"disabled-navigator":{"name":"Hide Range Selector","category":"Stock Chart"},"disabled-period":{"name":"Hide Period Selector","category":"Stock Chart"},"datetime-category":{"name":"DateTime Category Axis","category":"Stock Chart"},"stock-events":{"name":"Stock Events","category":"Stock Chart"},"defaultSample":"stock-chart/default"},
"stepper": {"default":{"name":"Default Functionalities","category":"Stepper"},"orientation":{"name":"Orientation","category":"Stepper"},"validation":{"name":"Validation","category":"Stepper"},"linear":{"name":"Linear Flow","category":"Stepper"},"defaultSample":"stepper/default"},
"spreadsheet": {"default":{"name":"Default Functionalities","category":"Spreadsheet"},"formula":{"name":"Formula","category":"Spreadsheet"},"protect-sheet":{"name":"Protection","category":"Spreadsheet"},"freeze-pane":{"name":"Freeze Panes","category":"Spreadsheet"},"data-validation":{"name":"Data Validation","category":"Spreadsheet"},"hyperlink":{"name":"Hyperlink","category":"Spreadsheet"},"cell-data-binding":{"name":"Cell Data Binding","category":"Data Binding"},"remote-data-binding":{"name":"Remote Data Binding","category":"Data Binding"},"cell-formatting":{"name":"Cell Formatting","category":"Formatting"},"number-formatting":{"name":"Number Formatting","category":"Formatting"},"conditional-formatting":{"name":"Conditional Formatting","category":"Formatting"},"sorting-and-filtering":{"name":"Sorting and Filtering","category":"Data Analysis"},"chart":{"name":"Chart","category":"Data Visualization"},"image":{"name":"Image","category":"Illustrations"},"cell-template":{"name":"Cell Template","category":"Templates"},"notes":{"name":"Notes","category":"Review"},"print":{"name":"Print","category":"Printing"},"defaultSample":"spreadsheet/default"},
"splitter": {"default":{"name":"Default Functionalities","category":"Splitter"},"expand-and-collapse":{"name":"Expand and Collapse","category":"Splitter"},"accordion-navigation-menu":{"name":"Accordion Navigation Menu","category":"Use Case"},"details-view":{"name":"Details View","category":"Use Case"},"outlook-style-layout":{"name":"Outlook-style Layout","category":"Use Case"},"code-editor-layout":{"name":"Code Editor Layout","category":"Use Case"},"defaultSample":"splitter/default"},
"speed-dial": {"default":{"name":"Default Functionalities","category":"SpeedDial"},"linear":{"name":"Position (Linear)","category":"SpeedDial"},"radial":{"name":"Radial Menu","category":"SpeedDial"},"styles":{"name":"Styles","category":"SpeedDial"},"template":{"name":"Template","category":"SpeedDial"},"modal":{"name":"Modal","category":"SpeedDial"},"defaultSample":"speed-dial/default"},
"sparkline": {"default":{"name":"Default","category":"Sparkline Charts"},"series-types":{"name":"Series Types","category":"Sparkline Charts"},"axis-types":{"name":"Axis Value Types","category":"Sparkline Charts"},"spark-grid":{"name":"Sparkline in Grid","category":"Sparkline Charts"},"customization":{"name":"Customization","category":"Sparkline Charts"},"live-update":{"name":"Live Update","category":"Sparkline Charts"},"range-band":{"name":"Range Band","category":"Sparkline Charts"},"defaultSample":"sparkline/default"},
"smith-chart": {"default":{"name":"Default","category":"Smith Chart"},"custom":{"name":"Customization","category":"Smith Chart"},"print-export":{"name":"Print and Export","category":"Smith Chart"},"defaultSample":"smith-chart/default"},
"skeleton": {"default":{"name":"Default Functionalities","category":"Skeleton"},"animation":{"name":"Animation","category":"Skeleton"},"defaultSample":"skeleton/default"},
"signature": {"default":{"name":"Default Functionalities","category":"Signature"},"toolbar":{"name":"Toolbar","category":"Signature"},"defaultSample":"signature/default"},
"sidebar": {"default":{"name":"Default Functionalities","category":"Sidebar"},"docking-sidebar":{"name":"Dock","category":"Sidebar"},"api":{"name":"API","category":"Sidebar"},"sidebar-menu":{"name":"Sidebar Menu","category":"Sidebar"},"responsive-panel":{"name":"Responsive Panel","category":"Sidebar"},"sidebar-list":{"name":"Sidebar With ListView","category":"Sidebar"},"defaultSample":"sidebar/default"},
"schedule": {"overview":{"name":"Overview","category":"Scheduler"},"default":{"name":"Default Functionalities","category":"Scheduler"},"local-data":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"calendar-integration":{"name":"Sync Google Calendar","category":"Appointments"},"realtime-binding":{"name":"Real-Time Binding","category":"Appointments"},"recurrence-events":{"name":"Recurring Events","category":"Appointments"},"block-events":{"name":"Blocking Dates and Time","category":"Appointments"},"search-events":{"name":"Search Events","category":"Appointments"},"timezone":{"name":"Timezone","category":"Appointments"},"external-drag-drop":{"name":"External Drag and Drop","category":"Appointments"},"multi-drag":{"name":"Multiple Events Drag","category":"Appointments"},"inline-editing":{"name":"Inline Editing","category":"Appointments"},"custom-month-view":{"name":"Custom Month View","category":"Views"},"defaultSample":"schedule/overview"},
"rich-text-editor": {"tools":{"name":"Overview","category":"Rich Text Editor"},"rich-text-editor":{"name":"Default Functionalities","category":"Rich Text Editor"},"image":{"name":"Image","category":"Rich Text Editor"},"insert-media":{"name":"Insert Media","category":"Rich Text Editor"},"inline":{"name":"Inline","category":"Rich Text Editor"},"paste-cleanup":{"name":"Paste from MS Word","category":"Rich Text Editor"},"format-painter":{"name":"Format Painter","category":"Rich Text Editor"},"iframe":{"name":"IFrame","category":"Rich Text Editor"},"print":{"name":"Print","category":"Rich Text Editor"},"ajax-load":{"name":"Ajax Content","category":"Rich Text Editor"},"resize-editor":{"name":"Resizable Editor","category":"Rich Text Editor"},"api":{"name":"API","category":"Rich Text Editor"},"enter-key-configuration":{"name":"Enter Key Configuration","category":"Rich Text Editor"},"client-side-events":{"name":"Events","category":"Rich Text Editor"},"blog-posting":{"name":"Use Case","category":"Rich Text Editor"},"auto-save":{"name":"Auto Save","category":"Rich Text Editor"},"file-browser":{"name":"File Browser","category":"Rich Text Editor"},"insert-emoticons":{"name":"Insert Emoticons","category":"Rich Text Editor"},"online-html-editor":{"name":"Online Html Editor","category":"Rich Text Editor"},"image-editor-integration":{"name":"Image Editor Integration","category":"Rich Text Editor"},"export-word":{"name":"Export to Word / PDF","category":"Export / Import"},"import-word":{"name":"Import from Word","category":"Export / Import"},"mention-integration":{"name":"@ Mention","category":"Mention Integration"},"smart-suggestion":{"name":"Smart Suggestion","category":"Mention Integration"},"types":{"name":"Type","category":"Toolbar"},"quick-format-toolbar":{"name":"Quick Format Toolbar","category":"Toolbar"},"insert-special-characters":{"name":"Insert Special Characters","category":"Custom Tool"},"markdown-editor":{"name":"Overview","category":"Markdown Editor"},"markdown-editor-preview":{"name":"Preview","category":"Markdown Editor"},"markdown-editor-custom-format":{"name":"Custom Format","category":"Markdown Editor"},"defaultSample":"rich-text-editor/tools"},
"ribbon": {"default":{"name":"Default Functionalities","category":"Ribbon"},"simplified":{"name":"Simplified Mode","category":"Ribbon"},"backstage":{"name":"Backstage","category":"Ribbon"},"contextual":{"name":"Contextual Tabs","category":"Ribbon"},"resize":{"name":"Ribbon Resizing","category":"Ribbon"},"keytip":{"name":"Ribbon KeyTips","category":"Ribbon"},"gallery":{"name":"Ribbon Gallery","category":"Ribbon"},"defaultSample":"ribbon/default"},
"rating": {"default":{"name":"Default Functionalities","category":"Rating"},"precision":{"name":"Precision","category":"Rating"},"tooltip":{"name":"Tooltip","category":"Rating"},"label":{"name":"Label","category":"Rating"},"template":{"name":"Template","category":"Rating"},"keyboard-navigation":{"name":"Keyboard Navigations","category":"Rating"},"defaultSample":"rating/default"},
"range-slider": {"default":{"name":"Default Functionalities","category":"Range Slider"},"ticks":{"name":"Ticks","category":"Range Slider"},"tooltip":{"name":"Tooltip","category":"Range Slider"},"orientation":{"name":"Vertical Orientation","category":"Range Slider"},"format":{"name":"Formatting","category":"Range Slider"},"limits":{"name":"Limits","category":"Range Slider"},"api":{"name":"API","category":"Range Slider"},"events":{"name":"Events","category":"Range Slider"},"thumb-customization":{"name":"Thumb","category":"Customization"},"selection-bar-customization":{"name":"Bar","category":"Customization"},"ticks-customization":{"name":"Ticks","category":"Customization"},"tooltip-customization":{"name":"Tooltip","category":"Customization"},"azure-pricing":{"name":"Cloud Pricing","category":"Use Case"},"defaultSample":"range-slider/default"},
"range-navigator": {"default":{"name":"Default","category":"Range Selector"},"light-weight":{"name":"Lightweight","category":"Range Selector"},"date-time":{"name":"DateTime","category":"Axis"},"double":{"name":"Numeric Axis","category":"Axis"},"logarithmic":{"name":"Logarithmic Axis","category":"Axis"},"multilevel":{"name":"Multilevel Labels","category":"Axis"},"period-selector":{"name":"Period Selector","category":"Customization"},"empty-data":{"name":"Empty Points","category":"Customization"},"filter":{"name":"Filter","category":"Customization"},"export":{"name":"Print and Export","category":"Export"},"right-to-left":{"name":"RTL","category":"RTL"},"defaultSample":"range-navigator/default"},
"query-builder": {"default":{"name":"Default Functionalities","category":"Query Builder"},"complex-databinding":{"name":"Complex Databinding","category":"Query Builder"},"grid":{"name":"Integration with Data Grid","category":"Query Builder"},"mongo-sql":{"name":"Mongo and SQL Query","category":"Query Builder"},"lock-group":{"name":"Lock Group/Rule","category":"Query Builder"},"clone-group":{"name":"Clone Group/Rule","category":"Query Builder"},"drag-drop":{"name":"Drag and Drop","category":"Query Builder"},"separate-connector":{"name":"Separate Connector","category":"Query Builder"},"template":{"name":"Value Template","category":"Template"},"rule-template":{"name":"Rule Template","category":"Template"},"header-template":{"name":"Header Template","category":"Template"},"defaultSample":"query-builder/default"},
"progress-bar": {"linear":{"name":"Linear","category":"Progress Bar"},"circular":{"name":"Circular","category":"Progress Bar"},"semi-circular":{"name":"Angle","category":"Progress Bar"},"custom-content":{"name":"Custom Contents","category":"Progress Bar"},"labels":{"name":"Labels","category":"Progress Bar"},"radius":{"name":"Radius","category":"Progress Bar"},"tool-tip":{"name":"Tooltip","category":"Progress Bar"},"stripes":{"name":"Stripes","category":"Progress Bar"},"progress-segment":{"name":"Progress Segment","category":"Progress Bar"},"defaultSample":"progress-bar/linear"},
"predefined-dialogs": {"default":{"name":"Default Functionalities","category":"Predefined Dialogs"},"customization":{"name":"Customization","category":"Predefined Dialogs"},"animation":{"name":"Animation","category":"Predefined Dialogs"},"defaultSample":"predefined-dialogs/default"},
"pivot-table": {"overview":{"name":"Overview","category":"Pivot Table"},"default":{"name":"Default Functionalities","category":"Pivot Table"},"live-data":{"name":"Live Data","category":"Pivot Table"},"local":{"name":"Local Data","category":"Data Binding"},"remote":{"name":"Remote Data","category":"Data Binding"},"server-side-engine":{"name":"Server-side Aggregation","category":"Data Binding"},"olap":{"name":"OLAP","category":"Data Binding"},"performance":{"name":"Performance","category":"Benchmark"},"pivot-chart":{"name":"Pivot Chart","category":"Integration"},"external-binding":{"name":"External Binding","category":"Integration"},"calculated-field":{"name":"Calculated Field","category":"Formula"},"defaultSample":"pivot-table/overview"},
"pdfviewer": {"default":{"name":"Default Functionalities","category":"PDF Viewer"},"read-only":{"name":"Read-Only","category":"Document Security"},"document-list":{"name":"Document List","category":"File Management"},"multi-format-viewer":{"name":" Multi-Format Viewer","category":"File Management"},"organize-pages":{"name":"Organize Pages","category":"Editor"},"custom-toolbar":{"name":"Toolbar","category":"Customization"},"custom-context-menu":{"name":"Context Menu","category":"Customization"},"right-to-left":{"name":"Right To Left","category":"Localization"},"form-filling":{"name":"Form Filling","category":"PDF Form"},"form-designer":{"name":"Form Designer","category":"PDF Form"},"esigning-form-designer":{"name":"eSigning Form Designer","category":"PDF Form"},"esigning-pdf-forms":{"name":"eSigning PDF Forms","category":"PDF Form"},"annotations":{"name":"Annotations","category":"Annotation"},"hand-written":{"name":"Handwritten Signature","category":"Signature"},"invisible-signature":{"name":"Invisible Signature","category":"Signature"},"defaultSample":"pdfviewer/default"},
"otp-input": {"default":{"name":"Default Functionalities","category":"OTP Input"},"api":{"name":"API","category":"OTP Input"},"defaultSample":"otp-input/default"},
"numerictextbox": {"default":{"name":"Default Functionalities","category":"Numeric Textbox"},"range-validation":{"name":"Range Validation","category":"Numeric Textbox"},"custom-format":{"name":"Custom Format","category":"Numeric Textbox"},"restrict-decimals":{"name":"Restrict Decimals","category":"Numeric Textbox"},"defaultSample":"numerictextbox/default"},
"multicolumn-combobox": {"default":{"name":"Default Functionalities","category":"MultiColumn Combobox"},"remote-databinding":{"name":"Remote Data","category":"MultiColumn Combobox"},"grouping":{"name":"Grouping","category":"MultiColumn Combobox"},"filtering":{"name":"Filtering","category":"MultiColumn Combobox"},"virtualization":{"name":"Virtualization","category":"MultiColumn Combobox"},"sorting":{"name":"Sorting","category":"MultiColumn Combobox"},"rtl":{"name":"RTL","category":"MultiColumn Combobox"},"keyboard-navigation":{"name":"Keyboard Navigation","category":"MultiColumn Combobox"},"template":{"name":"Template","category":"MultiColumn Combobox"},"defaultSample":"multicolumn-combobox/default"},
"multi-select": {"default":{"name":"Default Functionalities","category":"MultiSelect Dropdown"},"data-binding":{"name":"Data Binding","category":"MultiSelect Dropdown"},"object-value-binding":{"name":"Object Value Binding","category":"MultiSelect Dropdown"},"disabled-items":{"name":"Disabled Items","category":"MultiSelect"},"grouping":{"name":"Grouping","category":"MultiSelect Dropdown"},"template":{"name":"Templates","category":"MultiSelect Dropdown"},"filtering":{"name":"Filtering","category":"MultiSelect Dropdown"},"custom-value":{"name":"Custom Values","category":"MultiSelect Dropdown"},"virtual-scroll":{"name":"Virtualization","category":"MultiSelect Dropdown"},"chip-customization":{"name":"Chip Customization","category":"MultiSelect Dropdown"},"checkbox":{"name":"CheckBox","category":"MultiSelect Dropdown"},"grouping-with-checkbox":{"name":"Grouping with CheckBox","category":"MultiSelect Dropdown"},"selection-limit":{"name":"Selection Limit","category":"MultiSelect Dropdown"},"diacritics-filtering":{"name":"Diacritics Filtering","category":"MultiSelect Dropdown"},"defaultSample":"multi-select/default"},
"message": {"default":{"name":"Default Functionalities","category":"Message"},"variants":{"name":"Variants","category":"Message"},"icons":{"name":"Icons","category":"Message"},"customization":{"name":"Customization","category":"Message"},"template":{"name":"Template","category":"Message"},"defaultSample":"message/default"},
"menu": {"default":{"name":"Default Functionalities","category":"Menu Bar"},"data-binding":{"name":"Data Binding","category":"Menu Bar"},"scrollable":{"name":"Scrollable","category":"Menu Bar"},"template":{"name":"Template","category":"Menu Bar"},"hamburger-mode":{"name":"Hamburger Mode","category":"Menu Bar"},"api":{"name":"API","category":"Menu Bar"},"toolbar-integration":{"name":"Toolbar Integration","category":"Use Case"},"defaultSample":"menu/default"},
"mention": {"default":{"name":"Default Functionalities","category":"Mention"},"multiple-list":{"name":"Multiple List","category":"Mention"},"template":{"name":"Template","category":"Mention"},"defaultSample":"mention/default"},
"maskedtextbox": {"default":{"name":"Default Functionalities","category":"Input Mask"},"custom-mask":{"name":"Custom Mask","category":"Input Mask"},"formats":{"name":"Formats","category":"Input Mask"},"defaultSample":"maskedtextbox/default"},
"maps": {"default":{"name":"Default Functionalities","category":"Maps"},"projection":{"name":"Projection","category":"Features"},"multilayer":{"name":"Multi-layers","category":"Features"},"marker":{"name":"Marker","category":"Features"},"marker-template":{"name":"Marker template","category":"Features"},"marker-cluster":{"name":"Marker Clustering","category":"Features"},"label":{"name":"Labels","category":"Features"},"bubble":{"name":"Bubble","category":"Features"},"navigation-line":{"name":"Navigation Lines","category":"Features"},"legend":{"name":"Legend","category":"Features"},"color-mapping":{"name":"Color Mapping","category":"Features"},"annotation":{"name":"Annotations","category":"Features"},"polygon":{"name":"Polygon","category":"Polygon"},"osm":{"name":"OpenStreetMap","category":"Map Providers"},"osm-with-navigation-lines":{"name":"OSM with Navigation Lines","category":"Map Providers"},"osm-with-sublayers":{"name":"OSM with Sublayer","category":"Map Providers"},"osm-with-legend":{"name":"OSM with Legend","category":"Map Providers"},"tooltip":{"name":"Tooltip","category":"User Interaction"},"selection":{"name":"Selection & Highlight","category":"User Interaction"},"zooming":{"name":"Zooming & Panning","category":"User Interaction"},"programmatic-zoom":{"name":"Zoom to fit all markers","category":"User Interaction"},"drilldown":{"name":"Drill down","category":"User Interaction"},"print":{"name":"Print","category":"Print and Export"},"export":{"name":"Export","category":"Print and Export"},"heatmap":{"name":"Heat Map","category":"Use Cases"},"curved":{"name":"Flight routes","category":"Use Cases"},"earthquake":{"name":"Earthquake indication","category":"Use Cases"},"highlight":{"name":"Highlighted region","category":"Use Cases"},"cyber-attack-map":{"name":"Cyber Attack Map","category":"Use Cases"},"dynamic-marker":{"name":"Dynamic Markers","category":"Use Cases"},"map-pie":{"name":"Map with Pie chart","category":"Use Cases"},"map-with-slider":{"name":"Map with Slider","category":"Use Cases"},"sales-maps":{"name":"Sales map ","category":"Use Cases"},"seat-booking":{"name":"Bus seat booking","category":"Use Cases"},"defaultSample":"maps/default"},
"listview": {"default":{"name":"Default Functionalities","category":"ListView"},"remote-list":{"name":"Remote Data","category":"ListView"},"check-list":{"name":"Checklist","category":"ListView"},"nested-list":{"name":"Nested List","category":"ListView"},"virtualization":{"name":"Virtualization","category":"ListView"},"template":{"name":"Template","category":"Customization"},"group-template":{"name":"Group Template","category":"Customization"},"call-history":{"name":"Call History","category":"Use Case"},"scrolling":{"name":"Scrolling","category":"ListView"},"defaultSample":"listview/default"},
"list-box": {"default":{"name":"Default Functionalities","category":"List Box"},"dual-list-box":{"name":"Dual ListBox","category":"List Box"},"drag-and-drop":{"name":"Drag And Drop","category":"List Box"},"checkbox":{"name":"Checkbox","category":"List Box"},"template":{"name":"Template","category":"List Box"},"api":{"name":"API","category":"List Box"},"defaultSample":"list-box/default"},
"linear-gauge": {"default-functionalities":{"name":"Default Functionalities","category":"Linear Gauge"},"container":{"name":"Container","category":"Axis"},"track":{"name":"Track","category":"Axis"},"ticks":{"name":"Ticks","category":"Axis"},"labels":{"name":"Labels","category":"Axis"},"range":{"name":"Range","category":"Range"},"marker-pointer":{"name":"Marker Pointer","category":"Pointer"},"bar-pointer":{"name":"Bar Pointer","category":"Pointer"},"custom-pointer":{"name":"Custom Pointer","category":"Pointer"},"tooltip":{"name":"Tooltip","category":"User Interaction"},"print-export":{"name":"Print & Export","category":"Print & Export"},"progress-bar":{"name":"Progress Bar","category":"Use Cases"},"step-progress-bar":{"name":"Step Progress Bar","category":"Use Cases"},"slider":{"name":"Slider","category":"Use Cases"},"thermometer":{"name":"Thermometer","category":"Use Cases"},"steps-counter":{"name":"Steps Counter","category":"Use Cases"},"volume-settings":{"name":"Volume Settings","category":"Use Cases"},"battery-indicator":{"name":"Battery Indicator","category":"Use Cases"},"defaultSample":"linear-gauge/default-functionalities"},
"kanban": {"overview":{"name":"Overview","category":"Kanban"},"default":{"name":"Default Functionalities","category":"Kanban"},"swimlane":{"name":"Swimlane","category":"Kanban"},"workflow":{"name":"Workflow","category":"Kanban"},"stacked-header":{"name":"Stacked Header","category":"Kanban"},"dialog-editing":{"name":"Dialog Editing","category":"Kanban"},"search-filter":{"name":"Search and Filter Cards","category":"Kanban"},"sorting":{"name":"Sorting Cards","category":"Kanban"},"virtual-scrolling":{"name":"Virtual Scrolling","category":"Kanban"},"local-data":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"header-template":{"name":"Header Template","category":"Templates"},"swimlane-template":{"name":"Swimlane Template","category":"Templates"},"card-template":{"name":"Card Template","category":"Templates"},"tooltip-template":{"name":"Tooltip Template","category":"Templates"},"toggle-columns":{"name":"Toggle Columns","category":"Columns"},"show-hide":{"name":"Show/Hide Columns","category":"Columns"},"wip-validation":{"name":"WIP Validation","category":"Validation"},"api":{"name":"API","category":"Miscellaneous"},"events":{"name":"Events","category":"Miscellaneous"},"defaultSample":"kanban/overview"},
"inplace-editor": {"default":{"name":"Overview","category":"In-place Editor"},"dropdowns":{"name":"DropDown Components","category":"In-place Editor"},"pickers":{"name":"Date Components","category":"In-place Editor"},"edit-post":{"name":"Edit Post","category":"Use Case"},"defaultSample":"inplace-editor/default"},
"image-editor": {"default":{"name":"Default Functionalities","category":"Image Editor"},"profile-picture":{"name":"Profile Picture","category":"Image Editor"},"custom-toolbar":{"name":"Custom Toolbar","category":"Image Editor"},"defaultSample":"image-editor/default"},
"heatmap-chart": {"default-functionalities":{"name":"Default Functionalities","category":"Heatmap Chart"},"calendar-heatmap":{"name":"Calendar Heatmap","category":"Heatmap Chart"},"bubble-types":{"name":"Bubble Types","category":"Bubble Heatmap"},"color-and-size-attributes":{"name":"Color and Size Attributes","category":"Bubble Heatmap"},"row":{"name":"Row","category":"Data Binding"},"cell":{"name":"Cell","category":"Data Binding"},"json-row":{"name":"JSON Row","category":"Data Binding"},"json-cell":{"name":"JSON Cell","category":"Data Binding"},"empty-points":{"name":"Empty points","category":"Features"},"inversed-axis":{"name":"Inversed Axis","category":"Features"},"opposed-axis":{"name":"Opposed Axis","category":"Features"},"label-template":{"name":"Label Template","category":"Features"},"multi-level-labels":{"name":"Multi Level Labels","category":"Features"},"cell-selection":{"name":"Selection","category":"Features"},"legend-placement":{"name":"Legend Placement","category":"Features"},"large-data":{"name":"Large Data","category":"Features"},"palette-mode":{"name":"Palette Mode","category":"Features"},"color-range":{"name":"Color Range","category":"Features"},"rendering-mode":{"name":"Rendering mode","category":"Features"},"tooltip-template":{"name":"Tooltip Template","category":"Features"},"defaultSample":"heatmap-chart/default-functionalities"},
"grid": {"overview":{"name":"Overview","category":"Data Grid"},"live-data":{"name":"Live Data","category":"Data Grid"},"default":{"name":"Default Functionalities","category":"Data Grid"},"adaptive-layout":{"name":"Adaptive Layout","category":"Data Grid"},"loading-animation":{"name":"Loading Animation","category":"Data Grid"},"empty-record-template":{"name":"Empty Record Template","category":"Data Grid"},"local-binding":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"custom-binding":{"name":"Custom Binding","category":"Data Binding"},"column-template":{"name":"Column Template","category":"Columns"},"stacked-header":{"name":"Stacked Header","category":"Columns"},"foreign-key":{"name":"Foreign Key Column","category":"Columns"},"reorder":{"name":"Reorder","category":"Columns"},"batch":{"name":"Batch Editing","category":"Editing"},"filter-menu":{"name":"Filter Menu","category":"Filtering"},"reactive-aggregate":{"name":"Reactive Aggregate","category":"Aggregates"},"lazy-load-grouping-with-paging":{"name":"Grouping with Paging","category":"Lazy Load Grouping"},"lazy-load-grouping-with-infinite-scrolling":{"name":"Grouping with Infinite Scrolling","category":"Lazy Load Grouping"},"lazy-load-grouping-with-virtual-scrolling":{"name":"Grouping with Virtual Scrolling","category":"Lazy Load Grouping"},"advanced-exporting":{"name":"Advanced Exporting","category":"Exporting"},"keyboard-navigation":{"name":"Keyboard Navigation","category":"Miscellaneous"},"defaultSample":"grid/overview"},
"gantt": {"overview":{"name":"Overview","category":"Gantt"},"default":{"name":"Default Functionalities","category":"Gantt"},"editing":{"name":"Editing","category":"Gantt"},"virtual-scroll":{"name":"VirtualScroll","category":"Gantt"},"loading-animation":{"name":"Loading Animation","category":"Gantt"},"local-data":{"name":"Local Data","category":"Data Binding"},"load-on-demand":{"name":"Load On Demand","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"self-reference-data":{"name":"Self Reference Data","category":"Data Binding"},"taskMode":{"name":"Task Scheduling Mode","category":"Scheduling Concepts"},"work-week":{"name":"Workweek","category":"Scheduling Concepts"},"timeline-template":{"name":"Timeline Template","category":"Templates"},"defaultSample":"gantt/overview"},
"floating-action-button": {"overview":{"name":"Overview","category":"Floating Action Button"},"default":{"name":"Default Functionalities","category":"Floating Action Button"},"position":{"name":"Position","category":"Floating Action Button"},"styles":{"name":"Styles","category":"Floating Action Button"},"defaultSample":"floating-action-button/overview"},
"file-manager": {"overview":{"name":"Overview","category":"File Manager"},"flat-data":{"name":"Flat Data","category":"File Manager"},"custom-thumbnail":{"name":"Custom Thumbnails","category":"File Manager"},"default":{"name":"API","category":"File Manager"},"drag-drop":{"name":"Drag and Drop","category":"File Manager"},"directory-upload":{"name":"Directory upload","category":"File Manager"},"virtualization":{"name":"Virtualization","category":"File Manager"},"file-upload":{"name":"File Upload","category":"Use Case"},"access-control":{"name":"Access Control","category":"Use Case"},"azure-service":{"name":"Azure Blob Provider","category":"Cloud Service Providers"},"nodejs-file-provider":{"name":"NodeJS File Provider","category":"Cloud Service Providers"},"AmazonS3Provider":{"name":"Amazon S3 File Provider","category":"Cloud Service Providers"},"firebase":{"name":"Firebase Realtime File Provider","category":"Cloud Service Providers"},"ibm-cos-node-file-provider":{"name":"IBM Cloud File Provider","category":"Cloud Service Providers"},"defaultSample":"file-manager/overview"},
"drop-down-tree": {"default":{"name":"Default Functionalities","category":"Dropdown Tree"},"icons":{"name":"Icons and Images","category":"Dropdown Tree"},"checkbox":{"name":"Checkbox","category":"Dropdown Tree"},"multiple-selection":{"name":"Multiple Selection","category":"Dropdown Tree"},"template":{"name":"Template","category":"Dropdown Tree"},"custom-template":{"name":"Custom Template","category":"Dropdown Tree"},"filtering":{"name":"Filtering","category":"Dropdown Tree"},"local-data":{"name":"Local Data","category":"Data Binding"},"remote-data":{"name":"Remote Data","category":"Data Binding"},"defaultSample":"drop-down-tree/default"},
"drop-down-list": {"default":{"name":"Default Functionalities","category":"Dropdown List"},"grouping-icon":{"name":"Grouping and Icons","category":"Dropdown List"},"data-binding":{"name":"Data Binding","category":"Dropdown List"},"object-value-binding":{"name":"Object Value Binding","category":"Dropdown List"},"disabled-items":{"name":"Disabled Items","category":"Dropdown List"},"filtering":{"name":"Filtering","category":"Dropdown List"},"template":{"name":"Templates","category":"Dropdown List"},"virtual-scroll":{"name":"Virtualization","category":"Dropdown List"},"cascading":{"name":"Cascading","category":"Dropdown List"},"inline":{"name":"Inline","category":"Dropdown List"},"diacritics-filtering":{"name":"Diacritics Filtering","category":"Dropdown List"},"defaultSample":"drop-down-list/default"},
"document-editor": {"default":{"name":"Default Functionalities","category":"DocumentEditor"},"bindUI-to-document":{"name":"Bind UI To Document","category":"Document Editor"},"document-list":{"name":"Document List","category":"File Management"},"character-formatting":{"name":"Character Formatting","category":"Editing Features"},"paragraph-formatting":{"name":"Paragraph Formatting","category":"Editing Features"},"styles":{"name":"Styles","category":"Editing Features"},"bullets-and-numbering":{"name":"Bullets and Numbering","category":"Editing Features"},"links-and-bookmarks":{"name":"Hyperlinks and Bookmarks","category":"Editing Features"},"table-formatting":{"name":"Table Formatting","category":"Editing Features"},"section-formatting":{"name":"Section Formatting","category":"Editing Features"},"headers-and-footers":{"name":"Headers and Footers","category":"Editing Features"},"table-of-contents":{"name":"Table of Contents","category":"References"},"defaultSample":"document-editor/default"},
"dialog": {"default":{"name":"Default Functionalities","category":"Dialog"},"modal-dialog":{"name":"Modal","category":"Dialog"},"template":{"name":"Template","category":"Dialog"},"dialog-contents-via-ajax":{"name":"Ajax Content","category":"Dialog"},"draggable":{"name":"Draggable","category":"Dialog"},"resizable":{"name":"Resizable","category":"Dialog"},"position":{"name":"Positioning","category":"Dialog"},"animation":{"name":"Animation","category":"Dialog"},"multiple-dialogs":{"name":"Multiple Dialogs","category":"Dialog"},"components-dialog":{"name":"Components inside Dialog","category":"Dialog"},"defaultSample":"dialog/default"},
"diagram": {"default-functionality":{"name":"Flow Chart","category":"Getting Started"},"shape-gallery":{"name":"Shapes","category":"Getting Started"},"getting-started-node":{"name":"Nodes","category":"Getting Started"},"custom-shapes":{"name":"HTML Shapes","category":"Getting Started"},"zoom-and-pan":{"name":"Zooming and Panning","category":"Interactive Features"},"scrolling":{"name":"Scrolling","category":"Interactive Features"},"drawing-tool":{"name":"Drawing Tools","category":"Interactive Features"},"hierarchical-model":{"name":"Hierarchical Tree","category":"Automatic Layouts"},"organization-model":{"name":"Organization Chart","category":"Automatic Layouts"},"radial-tree":{"name":"Radial Tree","category":"Automatic Layouts"},"defaultSample":"diagram/default-functionality"},
"datetimepicker": {"default":{"name":"Default Functionalities","category":"DateTimePicker"},"date-time-range":{"name":"DateTime Range","category":"DateTimePicker"},"date-time-format":{"name":"Format","category":"DateTimePicker"},"disabled":{"name":"Disabled Dates","category":"DateTimePicker"},"special-dates":{"name":"Special Dates","category":"DateTimePicker"},"input-mask":{"name":"Mask Support","category":"DateTimePicker"},"defaultSample":"datetimepicker/default"},
"daterangepicker": {"default":{"name":"Default Functionalities","category":"DateRangePicker"},"date-range":{"name":"Date Range","category":"DateRangePicker"},"day-span":{"name":"Day Span","category":"DateRangePicker"},"date-format":{"name":"Format","category":"DateRangePicker"},"presets":{"name":"Preset Ranges","category":"DateRangePicker"},"month-range-picker":{"name":"Month Range Picker","category":"DateRangePicker"},"defaultSample":"daterangepicker/default"},
"datepicker": {"default":{"name":"Default Functionalities","category":"DatePicker"},"date-range":{"name":"Date Range","category":"DatePicker"},"date-format":{"name":"Format","category":"DatePicker"},"disabled":{"name":"Disabled Dates","category":"DatePicker"},"special-dates":{"name":"Special Dates","category":"DatePicker"},"month-picker":{"name":"Month Picker","category":"DatePicker"},"input-mask":{"name":"Mask Support","category":"DatePicker"},"defaultSample":"datepicker/default"},
"dashboard-layout": {"default":{"name":"Default Functionalities","category":"Dashboard Layout"},"predefined-layouts":{"name":"Predefined Layouts","category":"Dashboard Layout"},"properties":{"name":"API","category":"Dashboard Layout"},"dynamic":{"name":"Editable Dashboard","category":"Dashboard Layout"},"analytics-dashboard":{"name":"SEO Analytics Dashboard","category":"Use Case"},"defaultSample":"dashboard-layout/default"},
"context-menu": {"default":{"name":"Default Functionalities","category":"Context Menu"},"defaultSample":"context-menu/default"},
"combo-box": {"default":{"name":"Default Functionalities","category":"ComboBox"},"grouping-icon":{"name":"Grouping and Icons","category":"ComboBox"},"data-binding":{"name":"Data Binding","category":"ComboBox"},"object-value-binding":{"name":"Object Value Binding","category":"ComboBox"},"disabled-items":{"name":"Disabled Items","category":"ComboBox"},"custom-value":{"name":"Custom Value","category":"ComboBox"},"filtering":{"name":"Filtering","category":"ComboBox"},"template":{"name":"Templates","category":"ComboBox"},"virtual-scroll":{"name":"Virtualization","category":"ComboBox"},"cascading":{"name":"Cascading","category":"ComboBox"},"diacritics-filtering":{"name":"Diacritics Filtering","category":"ComboBox"},"defaultSample":"combo-box/default"},
"color-picker": {"default":{"name":"Default Functionalities","category":"Color Picker"},"inline":{"name":"Inline Mode","category":"Color Picker"},"custom":{"name":"Custom Palettes","category":"Color Picker"},"api":{"name":"API","category":"Color Picker"},"defaultSample":"color-picker/default"},
"circular-gauge": {"default-functionalities":{"name":"Default Functionalities","category":"Circular Gauge"},"ticks-and-labels":{"name":"Ticks and Labels","category":"Axis"},"multiple-axes":{"name":"Multiple Axes","category":"Axis"},"custom-labels":{"name":"Custom Labels","category":"Axis"},"range-color-for-axis":{"name":"Range Color for Axis","category":"Axis"},"axis-background":{"name":"Axis Background","category":"Axis"},"pointer-types":{"name":"Pointer Types","category":"Pointer"},"text-pointer":{"name":"Text Pointer","category":"Pointer"},"image-pointer":{"name":"Image Pointer","category":"Pointer"},"range-customization":{"name":"Range Customization","category":"Range"},"multiple-ranges":{"name":"Multiple Ranges","category":"Range"},"legend":{"name":"Legend","category":"Range"},"arc-gauge":{"name":"Arc Gauge","category":"Arc Gauge"},"semi-circular-gauge":{"name":"Semi-circular Gauge","category":"Arc Gauge"},"pointer-ranges-drag":{"name":"Pointer & Ranges Drag","category":"User Interaction"},"tooltip":{"name":"Tooltip","category":"User Interaction"},"print-export":{"name":"Print & Export","category":"Print & Export"},"clock":{"name":"Clock","category":"Use Cases"},"radial-slider":{"name":"Radial Slider","category":"Use Cases"},"direction-compass":{"name":"Direction Compass","category":"Use Cases"},"speedometer":{"name":"Speedometer","category":"Use Cases"},"sleep-tracker":{"name":"Sleep Tracker","category":"Use Cases"},"data-sample":{"name":"Data Sample","category":"Use Cases"},"apple-watch-rings":{"name":"Apple Watch Rings","category":"Use Cases"},"defaultSample":"circular-gauge/default-functionalities"},
"chips": {"default":{"name":"Default Functionalities","category":"Chips"},"api":{"name":"API","category":"Chips"},"defaultSample":"chips/default"},
"chart": {"overview":{"name":"Overview","category":"Charts"},"line":{"name":"Line","category":"Line Charts"},"spline":{"name":"Spline","category":"Line Charts"},"stepline":{"name":"Step Line","category":"Line Charts"},"area":{"name":"Area","category":"Area Charts"},"spline-area":{"name":"Spline Area","category":"Area Charts"},"steparea":{"name":"Step Area","category":"Area Charts"},"column":{"name":"Column","category":"Bar Charts"},"grouped-column":{"name":"Grouped Column","category":"Bar Charts"},"rounded-column":{"name":"Rounded Column","category":"Bar Charts"},"update-spline":{"name":"Spline updating each second","category":"Real-time Charts"},"live-stock-data":{"name":"Live stock data","category":"Real-time Charts"},"update-data-source":{"name":"Update data source","category":"Real-time Charts"},"click-add-point":{"name":"Click to add a point","category":"Real-time Charts"},"defaultSample":"chart/overview"},
"carousel": {"default":{"name":"Default Functionalities","category":"Carousel"},"data-binding":{"name":"Data Binding","category":"Carousel"},"templates":{"name":"Templates","category":"Carousel"},"partial-visible":{"name":"Partial Visible","category":"Carousel"},"indicator-type":{"name":"Indicator Type","category":"Carousel"},"keyboard-navigation":{"name":"Keyboard Navigation","category":"Carousel"},"api":{"name":"API","category":"Carousel"},"defaultSample":"carousel/default"},
"card": {"basic":{"name":"Basic Card","category":"Cards"},"vertical":{"name":"Vertical Card","category":"Cards"},"horizontal":{"name":"Horizontal Card","category":"Cards"},"swipeable":{"name":"Swipeable Card","category":"Cards"},"flip":{"name":"Flip Card","category":"Cards"},"reveal":{"name":"Reveal Card","category":"Cards"},"defaultSample":"card/basic"},
"calendar": {"default":{"name":"Default Functionalities","category":"Calendar"},"date-range":{"name":"Date Range","category":"Calendar"},"disabled":{"name":"Disabled Dates","category":"Calendar"},"special-dates":{"name":"Special Dates","category":"Calendar"},"multi-selection":{"name":"Multiple Selection","category":"Calendar"},"month-picker":{"name":"Month Picker","category":"Calendar"},"islamic-calendar":{"name":"Islamic Calendar","category":"Calendar"},"defaultSample":"calendar/default"},
"button": {"default":{"name":"Default Functionalities","category":"Button"},"button-group":{"name":"Button Group","category":"Button"},"checkbox":{"name":"Checkbox","category":"Button"},"radio-button":{"name":"Radio Button","category":"Button"},"dropdown-button":{"name":"Dropdown Menu","category":"Button"},"split-button":{"name":"Split Button","category":"Button"},"switch":{"name":"Switch","category":"Button"},"progress-button":{"name":"Progress Button","category":"Button"},"defaultSample":"button/default"},
"bullet-chart": {"default":{"name":"Default","category":"Bullet Chart"},"multiple-data":{"name":"Multiple Data","category":"Bullet Chart"},"right-to-left":{"name":"RTL","category":"Bullet Chart"},"bar-customization":{"name":"Feature and Target Bar","category":"Bullet Chart"},"customization":{"name":"Range and Label Settings","category":"Bullet Chart"},"tooltip":{"name":"Tooltip Template","category":"Bullet Chart"},"orientation":{"name":"Orientation","category":"Bullet Chart"},"bullet-legend":{"name":"Legend","category":"Bullet Chart"},"defaultSample":"bullet-chart/default"},
"breadcrumb": {"default":{"name":"Default Functionalities","category":"Breadcrumb"},"bind-to-location":{"name":"Bind to Location","category":"Breadcrumb"},"template-and-customization":{"name":"Template and Customization","category":"Breadcrumb"},"overflow-modes":{"name":"Overflow Modes","category":"Breadcrumb"},"events":{"name":"Events","category":"Breadcrumb"},"keyboard-navigation":{"name":"Keyboard Navigation","category":"Breadcrumb"},"address-bar":{"name":"Address Bar","category":"Use Case"},"defaultSample":"breadcrumb/default"},
"badge": {"default":{"name":"Default","category":"Badge"},"types":{"name":"Types","category":"Badge"},"notification":{"name":"Notification","category":"Badge"},"listview":{"name":"ListView","category":"Integration"},"accordion":{"name":"Accordion","category":"Integration"},"toolbar":{"name":"Toolbar","category":"Integration"},"defaultSample":"badge/default"},
"avatar": {"default":{"name":"Default","category":"Avatar"},"types":{"name":"Types","category":"Avatar"},"badge":{"name":"Badge","category":"Integration"},"listview":{"name":"ListView","category":"Integration"},"card":{"name":"Card","category":"Integration"},"defaultSample":"avatar/default"},
"auto-complete": {"default":{"name":"Default Functionalities","category":"AutoComplete"},"grouping-icon":{"name":"Grouping and Icons","category":"AutoComplete"},"data-binding":{"name":"Data Binding","category":"AutoComplete"},"object-value-binding":{"name":"Object Value Binding","category":"AutoComplete"},"disabled-items":{"name":"Disabled Items","category":"AutoComplete"},"template":{"name":"Templates","category":"AutoComplete"},"virtual-scroll":{"name":"Virtualization","category":"AutoComplete"},"highlight":{"name":"Highlight","category":"AutoComplete"},"custom-filtering":{"name":"Custom Filtering","category":"AutoComplete"},"diacritics-filtering":{"name":"Diacritics Filtering","category":"AutoComplete"},"defaultSample":"auto-complete/default"},
"arc-gauge": {"default-functionalities":{"name":"Default Functionalities","category":"Arc Gauge"},"customer-satisfaction-score":{"name":"Customer Satisfaction Score","category":"Arc Gauge"},"key-performance-indicator":{"name":"Key Performance Indicator","category":"Arc Gauge"},"patterns":{"name":"Patterns","category":"Arc Gauge"},"defaultSample":"arc-gauge/default-functionalities"},
"appbar": {"default":{"name":"Default Functionalities","category":"AppBar"},"color":{"name":"Color","category":"AppBar"},"defaultSample":"appbar/default"},
"accordion": {"default":{"name":"Default Functionalities","category":"Accordion"},"templates":{"name":"Templates","category":"Accordion"},"icon":{"name":"Icons","category":"Accordion"},"keyboard-interaction":{"name":"Keyboard Interaction","category":"Accordion"},"defaultSample":"accordion/default"}
}

export let apiList:any={"treeview/default":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"}],"treeview/icons":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"sortOrder","description":"<p>Specifies a value that indicates whether the nodes are sorted in the ascending or descending order,\nor are not sorted at all. The available types of sort order are,</p>\n<ul>\n<li><code>None</code> - The nodes are not sorted.</li>\n<li><code>Ascending</code> - The nodes are sorted in the ascending order.</li>\n<li><code>Descending</code> - The nodes are sorted in the ascending order.</li>\n</ul>\n","type":"SortOrder","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#sortorder"}],"treeview/check-box":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"showCheckBox","description":"<p>Indicates that the nodes will display CheckBoxes in the TreeView.\nThe CheckBox will be displayed next to the expand/collapse icon of the node. For more information on CheckBoxes, refer to\n<a href=\"../../treeview/check-box/\">CheckBox</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#showcheckbox"}],"treeview/node-editing":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"allowEditing","description":"<p>Enables or disables editing of the text in the TreeView node. When <code>allowEditing</code> property is set\nto true, the TreeView allows you to edit the node by double clicking the node or by navigating to\nthe node and pressing <strong>F2</strong> key. For more information on node editing, refer\nto <a href=\"../../treeview/node-editing/\">Node Editing</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowediting"}],"treeview/multiple-selection":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"allowMultiSelection","description":"<p>Enables or disables multi-selection of nodes. To select multiple nodes:</p>\n<ul>\n<li>Select the nodes by holding down the <strong>Ctrl</strong> key while clicking on the nodes.</li>\n<li>Select consecutive nodes by clicking the first node to select and hold down the <strong>Shift</strong> key\nand click the last node to select.\nFor more information on multi-selection, refer to\n<a href=\"../../treeview/multiple-selection/\">Multi-Selection</a>.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowmultiselection"}],"treeview/drag-and-drop":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"allowDragAndDrop","description":"<p>Indicates whether the TreeView allows drag and drop of nodes. To drag and drop a node in\ndesktop, hold the mouse on the node, drag it to the target node and drop the node by releasing\nthe mouse. For touch devices, drag and drop operation is performed by touch, touch move\nand touch end. For more information on drag and drop nodes concept, refer to\n<a href=\"../../treeview/drag-and-drop/\">Drag and Drop</a>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowdraganddrop"},{"name":"allowMultiSelection","description":"<p>Enables or disables multi-selection of nodes. To select multiple nodes:</p>\n<ul>\n<li>Select the nodes by holding down the <strong>Ctrl</strong> key while clicking on the nodes.</li>\n<li>Select consecutive nodes by clicking the first node to select and hold down the <strong>Shift</strong> key\nand click the last node to select.\nFor more information on multi-selection, refer to\n<a href=\"../../treeview/multiple-selection/\">Multi-Selection</a>.</li>\n</ul>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#allowmultiselection"},{"name":"nodeDragStop","description":"<p>Event callback that is raised when the TreeView node drag (move) is stopped.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodedragstop"}],"treeview/template":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"cssClass","description":"<p>Specifies one or more than one CSS classes to be added with root element of the TreeView to help customize the appearance of the component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#cssclass"},{"name":"nodeTemplate","description":"<p>Specifies a template to render customized content for all the nodes. If the <code>nodeTemplate</code> property\nis set, the template content overrides the displayed node text. The property accepts template string\n<a href=\"https://ej2.syncfusion.com/documentation/common/template-engine/\">template string</a>\nor HTML element ID holding the content. For more information on template concept, refer to\n<a href=\"../../treeview/template/\">Template</a>.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#nodetemplate"}],"treeview/local-data":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"}],"treeview/remote-data":[{"name":"fields","description":"<p>Specifies the data source and mapping fields to render TreeView nodes.</p>\n","type":"FieldsSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#fields"},{"name":"created","description":"<p>Event callback that is raised when the TreeView component is created successfully.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#created"},{"name":"dataBound","description":"<p>Event callback that is raised when data source is populated in the TreeView.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treeview/#databound"}],"treegrid/treegrid-overview":[{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the TreeGrid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#querycellinfo"},{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the TreeGrid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in TreeGrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablevirtualization"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> is set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter tree grid records with required criteria.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowfiltering"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of treegrid records when column header is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowsorting"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) TreeGrid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#selectionsettings"},{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"dataBound","description":"<p>Triggers when data source is populated in the TreeGrid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#databound"},{"name":"actionComplete","description":"<p>Triggers when TreeGrid actions such as sorting, filtering, paging etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#actioncomplete"},{"name":"load","description":"<p>This event allows customization of TreeGrid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#load"}],"treegrid/live-data":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the TreeGrid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in TreeGrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablevirtualization"},{"name":"enableVirtualMaskRow","description":"<p>Specifies whether to display shimmer effect during scrolling action in virtual scrolling feature.\nIf disabled, spinner is shown instead of shimmer effect.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablevirtualmaskrow"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the TreeGrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enablehover"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"rowHeight","description":"<p>Defines the height of TreeGrid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowheight"},{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) TreeGrid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowselection"},{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the TreeGrid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#querycellinfo"},{"name":"load","description":"<p>This event allows customization of TreeGrid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#load"}],"treegrid/default":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"}],"treegrid/adaptive":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"enableAdaptiveUI","description":"<p>If <code>enableAdaptiveUI</code> is set to true, the pop-up UI will become adaptive to small screens,\nand be used for filtering and other features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#enableadaptiveui"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> is set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter tree grid records with required criteria.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowfiltering"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of treegrid records when column header is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"}],"treegrid/loading-animation":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of treegrid records when column header is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> is set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter tree grid records with required criteria.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowfiltering"},{"name":"loadingIndicator","description":"<p>Configures the loading indicator of the Tree Grid. Specifies whether to display spinner or shimmer effect\nduring the waiting time on any actions (paging, sorting, filtering, CRUD operations) performed in Tree Grid.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#loadingindicator"},{"name":"pageSettings","description":"<p>Configures the pager in the TreeGrid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pagesettings"}],"treegrid/localdata":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"}],"treegrid/remote-data":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"hasChildMapping","description":"<p>Specifies whether record is parent or not for the remote data binding</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#haschildmapping"},{"name":"parentIdMapping","description":"<p>Specifies the name of the field in the dataSource, which contains the parent’s id</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#parentidmapping"},{"name":"idMapping","description":"<p>Specifies the name of the field in the dataSource, which contains the id of that row.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#idmapping"},{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"}],"treegrid/selfreference":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"idMapping","description":"<p>Specifies the name of the field in the dataSource, which contains the id of that row.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#idmapping"},{"name":"parentIdMapping","description":"<p>Specifies the name of the field in the dataSource, which contains the parent’s id</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#parentidmapping"}],"treegrid/columntemplate":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"width","description":"<p>Defines the TreeGrid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#width"},{"name":"height","description":"<p>Defines the scrollable height of the TreeGrid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"rowHeight","description":"<p>Defines the height of TreeGrid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#rowheight"}],"treegrid/header-template":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"}],"treegrid/drag-anddrop":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, pager renders.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the TreeGrid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#pagesettings"},{"name":"allowRowDragAndDrop","description":"<p>If <code>allowRowDragAndDrop</code> is set to true, you can drag and drop treegrid rows at another treegrid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowrowdraganddrop"}],"treegrid/aggregate-default":[{"name":"dataSource","description":"<p>It is used to render TreeGrid table rows.</p>\n","type":"Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#datasource"},{"name":"childMapping","description":"<p>Specifies the mapping property path for child records in data source</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#childmapping"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"ColumnModel[]|string[]|Column[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#columns"},{"name":"aggregates","description":"<p>Configures the TreeGrid aggregate rows.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/aggregates/aggregates\"><code>Aggregates</code></a> for its configuration.</p>\n</blockquote>\n","type":"AggregateRowModel[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#aggregates"},{"name":"treeColumnIndex","description":"<p>Specifies the index of the column that needs to have the expander button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#treecolumnindex"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the TreeGrid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole TreeGrid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the TreeGrid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Search: Searches records by the given key.</li>\n<li>ExpandAll: Expands all the rows in TreeGrid</li>\n<li>CollapseAll: Collapses all the rows in TreeGrid</li>\n<li>ExcelExport - Export the TreeGrid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the TreeGrid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the TreeGrid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#toolbar"},{"name":"toolbarClick","description":"<p>Triggers when toolbar item is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#toolbarclick"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export treegrid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowpdfexport"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export treegrid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../treegrid/excel-export/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/treegrid/#allowexcelexport"}],"tooltip/default":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#appendto"},{"name":"position","description":"<p>It is used to set the position of Tooltip element, with respect to Target element.</p>\n","type":"Position","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#position"}],"tooltip/template":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},{"name":"beforeRender","description":"<p>We can trigger <code>beforeRender</code> event before the Tooltip and its contents are added to the DOM.\nWhen one of its arguments <code>cancel</code> is set to true, the Tooltip can be prevented from rendering on the page.\nThis event is mainly used for the purpose of customizing the Tooltip before it shows up on the screen.\nFor example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.\nRefer the documentation\n<a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/#dynamic-content-via-ajax\">here</a>\nto know more about this property with demo.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#beforerender"},{"name":"showTipPointer","description":"<p>It is used to show or hide the tip pointer of Tooltip.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#showtippointer"},{"name":"offsetX","description":"<p>It sets the space between the target and Tooltip element in X axis.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#offsetx"},{"name":"width","description":"<p>It is used to set the width of Tooltip component which accepts both string and number values.\nWhen set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#width"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#appendto"}],"tooltip/ajaxcontent":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},{"name":"beforeRender","description":"<p>We can trigger <code>beforeRender</code> event before the Tooltip and its contents are added to the DOM.\nWhen one of its arguments <code>cancel</code> is set to true, the Tooltip can be prevented from rendering on the page.\nThis event is mainly used for the purpose of customizing the Tooltip before it shows up on the screen.\nFor example, to load the AJAX content or to set new animation effects on the Tooltip, this event can be opted.\nRefer the documentation\n<a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/#dynamic-content-via-ajax\">here</a>\nto know more about this property with demo.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#beforerender"},{"name":"position","description":"<p>It is used to set the position of Tooltip element, with respect to Target element.</p>\n","type":"Position","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#position"},{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#databind"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#appendto"}],"tooltip/smartposition":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},{"name":"animation","description":"<p>We can set the same or different animation option to Tooltip while it is in open or close state.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/animation/\">here</a>\nto know more about this property with demo.</p>\n","type":"AnimationModel","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#animation"},{"name":"open","description":"<p>It is used to show the Tooltip on the specified target with specific animation settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#open"},{"name":"offsetX","description":"<p>It sets the space between the target and Tooltip element in X axis.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#offsetx"},{"name":"close","description":"<p>It is used to hide the Tooltip with specific animation effect.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#close"},{"name":"refresh","description":"<p>It is used to refresh the Tooltip content and its position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#refresh"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#appendto"}],"tooltip/tooltip-menu":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},{"name":"open","description":"<p>It is used to show the Tooltip on the specified target with specific animation settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#open"},{"name":"close","description":"<p>It is used to hide the Tooltip with specific animation effect.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#close"},{"name":"refresh","description":"<p>It is used to refresh the Tooltip content and its position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#refresh"}],"tooltip/html-content":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},{"name":"open","description":"<p>It is used to show the Tooltip on the specified target with specific animation settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#open"},{"name":"close","description":"<p>It is used to hide the Tooltip with specific animation effect.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#close"},{"name":"refresh","description":"<p>It is used to refresh the Tooltip content and its position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#refresh"}],"tooltip/api":[{"name":"content","description":"<p>It is used to display the content of Tooltip which can be both string and HTML Elements.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/content/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|HTMLElement|Function","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#content"},{"name":"target","description":"<p>It is used to denote the target selector where the Tooltip need to be displayed.\nThe target element is considered as parent container.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#target"},{"name":"open","description":"<p>It is used to show the Tooltip on the specified target with specific animation settings.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#open"},{"name":"close","description":"<p>It is used to hide the Tooltip with specific animation effect.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#close"},{"name":"refresh","description":"<p>It is used to refresh the Tooltip content and its position.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#refresh"},{"name":"width","description":"<p>It is used to set the width of Tooltip component which accepts both string and number values.\nWhen set to auto, the Tooltip width gets auto adjusted to display its content within the viewable screen.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#width"},{"name":"height","description":"<p>It is used to set the height of Tooltip component which accepts both string and number values.\nWhen Tooltip content gets overflow due to height value then the scroll mode will be enabled.\nRefer the documentation <a href=\"https://ej2.syncfusion.com/documentation/tooltip/setting-dimension/\">here</a>\nto know more about this property with demo.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#height"},{"name":"opensOn","description":"<p>It is used to determine the device mode to display the Tooltip content.\nIf it is in desktop, it will show the Tooltip content when hovering on the target element.\nIf it is in touch device, it will show the Tooltip content when tap and holding on the target element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/tooltip/#openson"}],"toolbar/default":[{"name":"items","description":"<p>An array of items that is used to configure Toolbar commands.</p>\n","type":"ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#items"}],"toolbar/popup":[{"name":"overflowMode","description":"<p>Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.\nThe possible values for this property as follows</p>\n<ul>\n<li>Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li>Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the <em>popup</em>.</li>\n<li>MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.</li>\n<li>Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.\nIf the popup content overflows the height of the page, the rest of the elements will be hidden.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#overflowmode"}],"toolbar/template":[{"name":"overflowMode","description":"<p>Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.\nThe possible values for this property as follows</p>\n<ul>\n<li>Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li>Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the <em>popup</em>.</li>\n<li>MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.</li>\n<li>Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.\nIf the popup content overflows the height of the page, the rest of the elements will be hidden.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#overflowmode"}],"toolbar/keyboard-interaction":[{"name":"overflowMode","description":"<p>Specifies the Toolbar display mode when Toolbar content exceeds the viewing area.\nThe possible values for this property as follows</p>\n<ul>\n<li>Scrollable: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li>Popup: Prioritized elements are displayed on the Toolbar and the rest of elements are moved to the <em>popup</em>.</li>\n<li>MultiRow: Displays the overflow toolbar items as an in-line of a toolbar.</li>\n<li>Extended: Hide the overflowing toolbar items in the next row.  Show the overflowing toolbar items when you click the expand icons.\nIf the popup content overflows the height of the page, the rest of the elements will be hidden.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/toolbar/#overflowmode"}],"timepicker/default":[{"name":"placeholder","description":"<p>Specifies the placeholder text that is displayed in textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/timepicker/#placeholder"}],"tab/default":[{"name":"items","description":"<p>An array of object that is used to configure the Tab component.</p>\n","type":"TabItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/tab/#items"}],"tab/orientation":[{"name":"headerPlacement","description":"<p>Specifies the orientation of Tab header.\nThe possible values for this property as follows</p>\n<ul>\n<li><code>Top</code>: Places the Tab header on the top.</li>\n<li><code>Bottom</code>: Places the Tab header at the bottom.</li>\n<li><code>Left</code>: Places the Tab header on the left.</li>\n<li><code>Right</code>: Places the Tab header at the right.</li>\n</ul>\n","type":"HeaderPosition","link":"//ej2.syncfusion.com/react/documentation/api/tab/#headerplacement"},{"name":"showCloseButton","description":"<p>Specifies whether to show the close button for header items to remove the item from the Tab.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#showclosebutton"}],"tab/responsive-modes":[{"name":"overflowMode","description":"<p>Specifies the Tab display mode when Tab content exceeds the viewing area.\nThe possible modes are:</p>\n<ul>\n<li><code>Scrollable</code>: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li><code>Popup</code>: Tab container holds the items that can be placed within the available space and rest of the items are moved to the popup.\nIf the popup content overflows the height of the page, the rest of the elements can be viewed by scrolling the popup.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/tab/#overflowmode"}],"tab/drag-and-drop":[{"name":"allowDragAndDrop","description":"<p>Sets true to allow drag and drop the Tab items</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/tab/#allowdraganddrop"},{"name":"onDragStart","description":"<p>The event will be fired before dragging the item from Tab</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#ondragstart"},{"name":"dragged","description":"<p>The event will be fired after dropping the Tab item</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/tab/#dragged"}],"tab/keyboard-interaction":[{"name":"overflowMode","description":"<p>Specifies the Tab display mode when Tab content exceeds the viewing area.\nThe possible modes are:</p>\n<ul>\n<li><code>Scrollable</code>: All the elements are displayed in a single line with horizontal scrolling enabled.</li>\n<li><code>Popup</code>: Tab container holds the items that can be placed within the available space and rest of the items are moved to the popup.\nIf the popup content overflows the height of the page, the rest of the elements can be viewed by scrolling the popup.</li>\n</ul>\n","type":"OverflowMode","link":"//ej2.syncfusion.com/react/documentation/api/tab/#overflowmode"}],"spreadsheet/default":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"openUrl","description":"<p>Specifies the service URL to open excel file in spreadsheet.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#openurl"},{"name":"saveUrl","description":"<p>Specifies the service URL to save spreadsheet as Excel file.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#saveurl"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/formula":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"showRibbon","description":"<p>It shows or hides the ribbon in spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showribbon"},{"name":"definedNames","description":"<p>Specifies the name of a range and uses it in a formula for calculation.</p>\n","type":"DefineNameModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#definednames"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/protect-sheet":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"beforeCellRender","description":"<p>Triggers before the cell appended to the DOM.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#beforecellrender"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/cell-data-binding":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"showFormulaBar","description":"<p>It shows or hides the formula bar and its features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showformulabar"},{"name":"showRibbon","description":"<p>It shows or hides the ribbon in spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showribbon"}],"spreadsheet/remote-data-binding":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"showFormulaBar","description":"<p>It shows or hides the formula bar and its features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showformulabar"},{"name":"showRibbon","description":"<p>It shows or hides the ribbon in spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showribbon"}],"spreadsheet/conditional-formatting":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/sorting-and-filtering":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/chart":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"openUrl","description":"<p>Specifies the service URL to open excel file in spreadsheet.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#openurl"},{"name":"saveUrl","description":"<p>Specifies the service URL to save spreadsheet as Excel file.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#saveurl"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/image":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"showRibbon","description":"<p>It shows or hides the ribbon in spreadsheet.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showribbon"},{"name":"showFormulaBar","description":"<p>It shows or hides the formula bar and its features.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#showformulabar"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/cell-template":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#created"}],"spreadsheet/notes":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"}],"spreadsheet/print":[{"name":"sheets","description":"<p>Configures sheets and its options.</p>\n","type":"SheetModel[]","link":"//ej2.syncfusion.com/react/documentation/api/spreadsheet/#sheets"}],"sidebar/default":[{"name":"type","description":"<p>Specifies the expanding types of the Sidebar.</p>\n<ul>\n<li><code>Over</code> - The sidebar floats over the main content area.</li>\n<li><code>Push</code> - The sidebar pushes the main content area to appear side-by-side, and shrinks the main content within the screen width.</li>\n<li><code>Slide</code> - The sidebar translates the x and y positions of main content area based on the sidebar width.\nThe main content area will not be adjusted within the screen width.</li>\n<li><code>Auto</code> - Sidebar with <code>Over</code> type in mobile resolution and <code>Push</code> type in other higher resolutions.</li>\n</ul>\n<blockquote>\n<p>For more details about SidebarType refer to\n<a href=\"../../sidebar/variations/\"><code>SidebarType</code></a> documentation.</p>\n</blockquote>\n","type":"SidebarType","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#type"},{"name":"position","description":"<p>Specifies the position of the Sidebar (Left/Right) corresponding to the main content.</p>\n<blockquote>\n<p>For more details about SidebarPosition refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/getting-started/#position\"><code>position</code></a> documentation.</p>\n</blockquote>\n","type":"SidebarPosition","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#position"},{"name":"showBackdrop","description":"<p>Specifies the whether to apply overlay options to main content when the Sidebar is in an open state.</p>\n<blockquote>\n<p>For more details about showBackdrop refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/getting-started/#enable-backdrop\"><code>Backdrop</code></a> documentation.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#showbackdrop"},{"name":"closeOnDocumentClick","description":"<p>Specifies whether the Sidebar need to be closed or not when document area is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#closeondocumentclick"},{"name":"change","description":"<p>Triggers when the state(expand/collapse) of the component is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#change"},{"name":"mediaQuery","description":"<p>Specifies the media query string for resolution, which when met opens the Sidebar.</p>\n<blockquote>\n<p>For more details about mediaQuery refer to\n<a href=\"https://ej2.syncfusion.com/documentation/sidebar/auto-close/\"><code>Auto Close</code></a> documentation.</p>\n</blockquote>\n","type":"string|MediaQueryList","link":"//ej2.syncfusion.com/react/documentation/api/sidebar/#mediaquery"}],"schedule/overview":[{"name":"height","description":"<p>Sets the <code>height</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Schedule will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Schedule gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#height"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"},{"name":"cssClass","description":"<p>It is used to customize the Schedule which accepts custom CSS class names that defines specific user-defined styles and themes\nto be applied on the Schedule element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cssclass"},{"name":"views","description":"<p>This property holds the views collection and its configurations. It accepts either the array of view names or the array of view\nobjects that holds different configurations for each views. By default,\nSchedule displays all the views namely <code>Day</code>, <code>Week</code>, <code>Work Week</code>, <code>Month</code> and <code>Agenda</code>.\nExample for array of views:</p>\n<p>Example for array of view objects:</p>\n","type":"View[]|ViewsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#views"},{"name":"timezone","description":"<p>Schedule will be assigned with specific timezone, so as to display the events in it accordingly. By default,\nSchedule dates are processed with System timezone, as no timezone will be assigned specifically to the Schedule at the initial time.\nWhenever the Schedule is bound to remote data services, it is always recommended to set specific timezone to Schedule to make the\nevents on it to display on the same time irrespective of the system timezone. It usually accepts\nthe valid <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">IANA</a> timezone names.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timezone"},{"name":"group","description":"<p>Allows defining the group related settings of multiple resources. When this property is non-empty, it means\nthat the resources will be grouped on the schedule layout based on the provided resource names.</p>\n","type":"GroupModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#group"},{"name":"resources","description":"<p>Allows defining the collection of resources to be displayed on the Schedule. The resource collection needs to be defined\nwith unique resource names to identify it along with the respective dataSource and field mapping options.</p>\n","type":"ResourcesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resources"},{"name":"dateHeaderTemplate","description":"<p>It accepts either the string or HTMLElement as template design content and parse it appropriately before displaying it onto\nthe date header cells. The field that can be accessed via this template is <code>date</code>.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#dateheadertemplate"},{"name":"timeScale","description":"<p>Allows to set different time duration on Schedule along with the customized grid count. It also has template option to\ncustomize the time slots with required time values in its own format.</p>\n","type":"TimeScaleModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timescale"},{"name":"rowAutoHeight","description":"<p>when set to <code>true</code>, allows the height of the work-cells to adjust automatically\nbased on the number of appointments present in those time ranges.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#rowautoheight"}],"schedule/default":[{"name":"height","description":"<p>Sets the <code>height</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Schedule will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Schedule gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#height"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"}],"schedule/local-data":[{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"}],"schedule/remote-data":[{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"}],"schedule/calendar-integration":[{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"dataBinding","description":"<p>Triggers before the data binds to the scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#databinding"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"}],"schedule/realtime-binding":[{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"dataBinding","description":"<p>Triggers before the data binds to the scheduler.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#databinding"}],"schedule/recurrence-events":[{"name":"width","description":"<p>Sets the <code>width</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string value can be either pixel or percentage format.\nWhen set to <code>auto</code>, the Schedule width gets auto-adjusted and display its content related to the viewable screen size.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#width"},{"name":"height","description":"<p>Sets the <code>height</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Schedule will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Schedule gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#height"},{"name":"currentView","description":"<p>To set the active view on scheduler, the <code>currentView</code> property can be used and it usually accepts either of the following available\nview options. The view option specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>Day</code>: Denotes Day view of the scheduler.</li>\n<li><code>Week</code>: Denotes Week view of the scheduler.</li>\n<li><code>WorkWeek</code>: Denotes Work Week view of the scheduler.</li>\n<li><code>Month</code>: Denotes Month view of the scheduler.</li>\n<li><code>Year</code>: Denotes Year view of the scheduler.</li>\n<li><code>Agenda</code>: Denotes Agenda view of the scheduler.</li>\n<li><code>MonthAgenda</code>: Denotes Month Agenda view of the scheduler.</li>\n<li><code>TimelineDay</code>: Denotes Timeline Day view of the scheduler.</li>\n<li><code>TimelineWeek</code>: Denotes Timeline Week view of the scheduler.</li>\n<li><code>TimelineWorkWeek</code>: Denotes Timeline Work Week view of the scheduler.</li>\n<li><code>TimelineMonth</code>: Denotes Timeline Month view of the scheduler.</li>\n<li><code>TimelineYear</code>: Denotes Timeline Year view of the scheduler.</li>\n</ul>\n","type":"View","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentview"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"}],"schedule/block-events":[{"name":"width","description":"<p>Sets the <code>width</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string value can be either pixel or percentage format.\nWhen set to <code>auto</code>, the Schedule width gets auto-adjusted and display its content related to the viewable screen size.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#width"},{"name":"height","description":"<p>Sets the <code>height</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Schedule will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Schedule gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#height"},{"name":"currentView","description":"<p>To set the active view on scheduler, the <code>currentView</code> property can be used and it usually accepts either of the following available\nview options. The view option specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>Day</code>: Denotes Day view of the scheduler.</li>\n<li><code>Week</code>: Denotes Week view of the scheduler.</li>\n<li><code>WorkWeek</code>: Denotes Work Week view of the scheduler.</li>\n<li><code>Month</code>: Denotes Month view of the scheduler.</li>\n<li><code>Year</code>: Denotes Year view of the scheduler.</li>\n<li><code>Agenda</code>: Denotes Agenda view of the scheduler.</li>\n<li><code>MonthAgenda</code>: Denotes Month Agenda view of the scheduler.</li>\n<li><code>TimelineDay</code>: Denotes Timeline Day view of the scheduler.</li>\n<li><code>TimelineWeek</code>: Denotes Timeline Week view of the scheduler.</li>\n<li><code>TimelineWorkWeek</code>: Denotes Timeline Work Week view of the scheduler.</li>\n<li><code>TimelineMonth</code>: Denotes Timeline Month view of the scheduler.</li>\n<li><code>TimelineYear</code>: Denotes Timeline Year view of the scheduler.</li>\n</ul>\n","type":"View","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentview"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"group","description":"<p>Allows defining the group related settings of multiple resources. When this property is non-empty, it means\nthat the resources will be grouped on the schedule layout based on the provided resource names.</p>\n","type":"GroupModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#group"},{"name":"resources","description":"<p>Allows defining the collection of resources to be displayed on the Schedule. The resource collection needs to be defined\nwith unique resource names to identify it along with the respective dataSource and field mapping options.</p>\n","type":"ResourcesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resources"}],"schedule/search-events":[{"name":"height","description":"<p>Sets the <code>height</code> of the Schedule component, accepting both string and number values.</p>\n<p>The string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Schedule will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Schedule gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#height"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"}],"schedule/timezone":[{"name":"timezone","description":"<p>Schedule will be assigned with specific timezone, so as to display the events in it accordingly. By default,\nSchedule dates are processed with System timezone, as no timezone will be assigned specifically to the Schedule at the initial time.\nWhenever the Schedule is bound to remote data services, it is always recommended to set specific timezone to Schedule to make the\nevents on it to display on the same time irrespective of the system timezone. It usually accepts\nthe valid <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">IANA</a> timezone names.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#timezone"},{"name":"selectedDate","description":"<p>To mark the active (current) date on the Schedule, <code>selectedDate</code> property can be defined.\nUsually, it defaults to the current System date.</p>\n","type":"Date","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#selecteddate"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"eventRendered","description":"<p>Triggers before each of the event getting rendered on the scheduler user interface.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventrendered"}],"schedule/external-drag-drop":[{"name":"currentView","description":"<p>To set the active view on scheduler, the <code>currentView</code> property can be used and it usually accepts either of the following available\nview options. The view option specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>Day</code>: Denotes Day view of the scheduler.</li>\n<li><code>Week</code>: Denotes Week view of the scheduler.</li>\n<li><code>WorkWeek</code>: Denotes Work Week view of the scheduler.</li>\n<li><code>Month</code>: Denotes Month view of the scheduler.</li>\n<li><code>Year</code>: Denotes Year view of the scheduler.</li>\n<li><code>Agenda</code>: Denotes Agenda view of the scheduler.</li>\n<li><code>MonthAgenda</code>: Denotes Month Agenda view of the scheduler.</li>\n<li><code>TimelineDay</code>: Denotes Timeline Day view of the scheduler.</li>\n<li><code>TimelineWeek</code>: Denotes Timeline Week view of the scheduler.</li>\n<li><code>TimelineWorkWeek</code>: Denotes Timeline Work Week view of the scheduler.</li>\n<li><code>TimelineMonth</code>: Denotes Timeline Month view of the scheduler.</li>\n<li><code>TimelineYear</code>: Denotes Timeline Year view of the scheduler.</li>\n</ul>\n","type":"View","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentview"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"resourceHeaderTemplate","description":"<p>Template option to customize the resource header bar. Here, the template accepts either\nthe string or HTMLElement as template design and then the parsed design is displayed onto the resource header cells.\nThe following can be accessible via template.</p>\n<ul>\n<li><code>resource</code> - All the resource fields.</li>\n<li><code>resourceData</code> - Object collection of current resource.\nRefer to the below code snippet.</li>\n</ul>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resourceheadertemplate"},{"name":"cssClass","description":"<p>It is used to customize the Schedule which accepts custom CSS class names that defines specific user-defined styles and themes\nto be applied on the Schedule element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cssclass"},{"name":"workHours","description":"<p>The working hours should be highlighted on Schedule with different color shade and an additional option must be provided to\nhighlight it or not. This functionality is handled through <code>workHours</code> property and the start work hour should be 9 AM by default\nand end work hour should point to 6 PM. The start and end working hours needs to be provided as Time value of short skeleton type.</p>\n","type":"WorkHoursModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#workhours"},{"name":"views","description":"<p>This property holds the views collection and its configurations. It accepts either the array of view names or the array of view\nobjects that holds different configurations for each views. By default,\nSchedule displays all the views namely <code>Day</code>, <code>Week</code>, <code>Work Week</code>, <code>Month</code> and <code>Agenda</code>.\nExample for array of views:</p>\n<p>Example for array of view objects:</p>\n","type":"View[]|ViewsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#views"},{"name":"group","description":"<p>Allows defining the group related settings of multiple resources. When this property is non-empty, it means\nthat the resources will be grouped on the schedule layout based on the provided resource names.</p>\n","type":"GroupModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#group"},{"name":"resources","description":"<p>Allows defining the collection of resources to be displayed on the Schedule. The resource collection needs to be defined\nwith unique resource names to identify it along with the respective dataSource and field mapping options.</p>\n","type":"ResourcesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resources"},{"name":"actionBegin","description":"<p>Triggers on beginning of every scheduler action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#actionbegin"},{"name":"drag","description":"<p>Triggers when an appointment is being in a dragged state.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#drag"}],"schedule/multi-drag":[{"name":"currentView","description":"<p>To set the active view on scheduler, the <code>currentView</code> property can be used and it usually accepts either of the following available\nview options. The view option specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>Day</code>: Denotes Day view of the scheduler.</li>\n<li><code>Week</code>: Denotes Week view of the scheduler.</li>\n<li><code>WorkWeek</code>: Denotes Work Week view of the scheduler.</li>\n<li><code>Month</code>: Denotes Month view of the scheduler.</li>\n<li><code>Year</code>: Denotes Year view of the scheduler.</li>\n<li><code>Agenda</code>: Denotes Agenda view of the scheduler.</li>\n<li><code>MonthAgenda</code>: Denotes Month Agenda view of the scheduler.</li>\n<li><code>TimelineDay</code>: Denotes Timeline Day view of the scheduler.</li>\n<li><code>TimelineWeek</code>: Denotes Timeline Week view of the scheduler.</li>\n<li><code>TimelineWorkWeek</code>: Denotes Timeline Work Week view of the scheduler.</li>\n<li><code>TimelineMonth</code>: Denotes Timeline Month view of the scheduler.</li>\n<li><code>TimelineYear</code>: Denotes Timeline Year view of the scheduler.</li>\n</ul>\n","type":"View","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentview"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"allowMultiDrag","description":"<p>This property helps to drag the multiple selected events. By default, it is set to <code>false</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowmultidrag"},{"name":"cssClass","description":"<p>It is used to customize the Schedule which accepts custom CSS class names that defines specific user-defined styles and themes\nto be applied on the Schedule element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#cssclass"},{"name":"views","description":"<p>This property holds the views collection and its configurations. It accepts either the array of view names or the array of view\nobjects that holds different configurations for each views. By default,\nSchedule displays all the views namely <code>Day</code>, <code>Week</code>, <code>Work Week</code>, <code>Month</code> and <code>Agenda</code>.\nExample for array of views:</p>\n<p>Example for array of view objects:</p>\n","type":"View[]|ViewsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#views"},{"name":"group","description":"<p>Allows defining the group related settings of multiple resources. When this property is non-empty, it means\nthat the resources will be grouped on the schedule layout based on the provided resource names.</p>\n","type":"GroupModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#group"},{"name":"resources","description":"<p>Allows defining the collection of resources to be displayed on the Schedule. The resource collection needs to be defined\nwith unique resource names to identify it along with the respective dataSource and field mapping options.</p>\n","type":"ResourcesModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#resources"}],"schedule/inline-editing":[{"name":"currentView","description":"<p>To set the active view on scheduler, the <code>currentView</code> property can be used and it usually accepts either of the following available\nview options. The view option specified in this property will be initially loaded on the schedule.</p>\n<ul>\n<li><code>Day</code>: Denotes Day view of the scheduler.</li>\n<li><code>Week</code>: Denotes Week view of the scheduler.</li>\n<li><code>WorkWeek</code>: Denotes Work Week view of the scheduler.</li>\n<li><code>Month</code>: Denotes Month view of the scheduler.</li>\n<li><code>Year</code>: Denotes Year view of the scheduler.</li>\n<li><code>Agenda</code>: Denotes Agenda view of the scheduler.</li>\n<li><code>MonthAgenda</code>: Denotes Month Agenda view of the scheduler.</li>\n<li><code>TimelineDay</code>: Denotes Timeline Day view of the scheduler.</li>\n<li><code>TimelineWeek</code>: Denotes Timeline Week view of the scheduler.</li>\n<li><code>TimelineWorkWeek</code>: Denotes Timeline Work Week view of the scheduler.</li>\n<li><code>TimelineMonth</code>: Denotes Timeline Month view of the scheduler.</li>\n<li><code>TimelineYear</code>: Denotes Timeline Year view of the scheduler.</li>\n</ul>\n","type":"View","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#currentview"},{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"group","description":"<p>Allows defining the group related settings of multiple resources. When this property is non-empty, it means\nthat the resources will be grouped on the schedule layout based on the provided resource names.</p>\n","type":"GroupModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#group"},{"name":"allowInline","description":"<p>This property helps user to add/edit the event in inline. By default, it is set to <code>false</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#allowinline"}],"schedule/custom-month-view":[{"name":"eventSettings","description":"<p>Complete set of settings related to Schedule events to bind it to local or remote dataSource, map applicable database fields and\nother validation to be carried out on the available fields.</p>\n","type":"EventSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#eventsettings"},{"name":"views","description":"<p>This property holds the views collection and its configurations. It accepts either the array of view names or the array of view\nobjects that holds different configurations for each views. By default,\nSchedule displays all the views namely <code>Day</code>, <code>Week</code>, <code>Work Week</code>, <code>Month</code> and <code>Agenda</code>.\nExample for array of views:</p>\n<p>Example for array of view objects:</p>\n","type":"View[]|ViewsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/schedule/#views"}],"richtexteditor/tools":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"showCharCount","description":"<p>Sets Boolean value to enable or disable the display of the character counter.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showcharcount"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers after command execution using toolbar items or executeCommand method.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},{"name":"maxLength","description":"<p>Specifies the maximum number of characters allowed in the Rich Text Editor component.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#maxlength"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/rich-text-editor":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/image":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"toolbarClick","description":"<p>Triggers when Rich Text Editor Toolbar items is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarclick"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"getRange","description":"<p>Get the selected range from the RichTextEditor's content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getrange"}],"richtexteditor/insert-media":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"toolbarClick","description":"<p>Triggers when Rich Text Editor Toolbar items is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarclick"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"getRange","description":"<p>Get the selected range from the RichTextEditor's content.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getrange"}],"richtexteditor/inline":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"inlineMode","description":"<p>Enable or disable the inline edit mode.</p>\n<ul>\n<li>enable - set boolean value to enable or disable the inline edit mode.</li>\n<li>onSelection - If its set to true, upon selecting the text, the toolbar is opened in inline.\nIf its set to false, upon clicking to the target element, the toolbar is opened.</li>\n</ul>\n","type":"InlineModeModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inlinemode"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"format","description":"<p>Predefine the collection of paragraph styles along with quote and code style that populate in format dropdown from the toolbar.</p>\n","type":"FormatModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#format"},{"name":"fontFamily","description":"<p>Predefine the font families that populate in font family dropdown list from the toolbar.</p>\n","type":"FontFamilyModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#fontfamily"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#databind"}],"richtexteditor/paste-cleanup":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"pasteCleanupSettings","description":"<p>Specifies the pasting options in Rich Text Editor component and control with the following properties.</p>\n<ul>\n<li>prompt - Set boolean value to enable or disable the prompt when pasting.</li>\n<li>deniedAttrs  -  Specifies the attributes to restrict when pasting in RTE.</li>\n<li>allowedStyleProps  -  Specifies the allowed style properties when pasting in RTE.</li>\n<li>deniedTags\t -  Specifies the tags to restrict when pasting in RTE.</li>\n<li>keepFormat\t -   Set boolean value to keep or remove the from when pasting.</li>\n<li>plainText\t -   Set boolean value to paste as plain text or not.</li>\n</ul>\n","type":"PasteCleanupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#pastecleanupsettings"}],"richtexteditor/format-painter":[{"name":"formatPainterSettings","description":"<p>Specifies the format painter options in Rich Text Editor with the following properties.</p>\n<ul>\n<li>allowedFormats - Sets the tag name selectors  for elements from which the formats  can be copied.</li>\n<li>deniedFormats - Sets the selectors  for elements from which formats  cannot be copied.</li>\n</ul>\n","type":"FormatPainterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#formatpaintersettings"}],"richtexteditor/iframe":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"height","description":"<p>Specifies the height of the Rich Text Editor component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#height"},{"name":"iframeSettings","description":"<p>Specifies the items to be rendered in an iframe mode, and it has the following properties.</p>\n<ul>\n<li>enable - Set Boolean value to enable, the editors content is placed in an iframe and isolated from the rest of the page.</li>\n<li>attributes - Custom style to be used inside the iframe to display content. This style is added to the iframe body.</li>\n<li>resources - we can add both styles and scripts to the iframe.</li>\n</ul>\n<ol>\n<li>styles[] - An array of CSS style files to inject inside the iframe to display content</li>\n<li>scripts[] - An array of JS script files to inject inside the iframe</li>\n</ol>\n","type":"IFrameSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#iframesettings"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers after command execution using toolbar items or executeCommand method.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/print":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"print","description":"<p>By default, prints all the pages of the RichTextEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#print"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/ajax-load":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/resize-editor":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"enableResize","description":"<p>Enables or disables the resizing option in the editor.\nIf enabled, the Rich Text Editor can be resized by dragging the resize icon in the bottom right corner.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enableresize"}],"richtexteditor/api":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"showCharCount","description":"<p>Sets Boolean value to enable or disable the display of the character counter.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#showcharcount"},{"name":"maxLength","description":"<p>Specifies the maximum number of characters allowed in the Rich Text Editor component.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#maxlength"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"readonly","description":"<p>The user interactions on the component are disabled, when set to true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#readonly"},{"name":"enabled","description":"<p>Specifies a value that indicates whether the component is enabled or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabled"},{"name":"enableHtmlEncode","description":"<p>specifies the value whether the source code is displayed with encoded format.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enablehtmlencode"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"getSelection","description":"<p>Retrieves the HTML markup content from currently selected content of RichTextEditor.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#getselection"},{"name":"selectAll","description":"<p>Selects all the content in RichTextEditor</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#selectall"}],"richtexteditor/enter-key-configuration":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"saveInterval","description":"<p>Specifies the saveInterval in milliseconds for autosave the value.\nThe change event will be triggered if the content was changed from the last saved interval.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#saveinterval"},{"name":"enterKey","description":"<p>Specifies tag to be inserted when enter key is pressed.</p>\n<ul>\n<li>\n<p><code>P</code> - When the enter key is pressed a <code>p</code> tag will be inserted and the default value of the Rich Text Editor will be &lt;p&gt;&lt;br&gt;&lt;/p&gt;.</p>\n</li>\n<li>\n<p><code>DIV</code> - When the enter key is pressed a <code>div</code> tag will be inserted instead of the default <code>P</code> tag and the default value of the Rich Text Editor will be &lt;div&gt;&lt;br&gt;&lt;/div&gt;.</p>\n</li>\n<li>\n<p><code>BR</code> - When the enter key is pressed a <code>br</code> tag will be inserted instead of the default <code>P</code> tag and the default value of the Rich Text Editor will be &lt;br&gt;.</p>\n</li>\n</ul>\n","type":"EnterKey","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enterkey"},{"name":"shiftEnterKey","description":"<p>Specifies tags to be inserted when shift+enter key is pressed.</p>\n<ul>\n<li>\n<p><code>BR</code> - When the shift + enter key is pressed a <code>br</code> tag will be inserted which is the default behavior.</p>\n</li>\n<li>\n<p><code>P</code> - When the shift + enter key is pressed a <code>p</code> tag will be inserted instead of the default <code>br</code> tag.</p>\n</li>\n<li>\n<p><code>DIV</code> - When the shift + enter key is pressed a <code>div</code> tag will be inserted instead of the default <code>br</code> tag.</p>\n</li>\n</ul>\n","type":"ShiftEnterKey","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#shiftenterkey"}],"richtexteditor/client-side-events":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers after command execution using toolbar items or executeCommand method.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},{"name":"focus","description":"<p>Triggers when Rich Text Editor is focused in</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#focus"},{"name":"blur","description":"<p>Triggers when Rich Text Editor is focused out.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#blur"},{"name":"change","description":"<p>Triggers only when Rich Text Editor is blurred and changes are done to the content.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#change"},{"name":"toolbarClick","description":"<p>Triggers when Rich Text Editor Toolbar items is clicked.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarclick"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/blog-posting":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"placeholder","description":"<p>Specifies the placeholder for the RichTextEditor’s content used when the Rich Text Editor body is empty.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#placeholder"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#databind"},{"name":"refresh","description":"<p>Applies all the pending property changes and render the component again.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#refresh"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/auto-save":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"placeholder","description":"<p>Specifies the placeholder for the RichTextEditor’s content used when the Rich Text Editor body is empty.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#placeholder"},{"name":"saveInterval","description":"<p>Specifies the saveInterval in milliseconds for autosave the value.\nThe change event will be triggered if the content was changed from the last saved interval.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#saveinterval"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/file-browser":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"fileManagerSettings","description":"<p>Specifies the image manager options in Rich Text Editor component and control with the following properties.</p>\n<ul>\n<li>enable - set boolean value to enable or disable the image manager.</li>\n<li>ajaxSettings - Specifies the AJAX settings of the image manager.</li>\n<li>contextMenuSettings - Specifies the context menu settings of the image manager.</li>\n<li>navigationPaneSettings - Specifies the navigation pane settings of the image manager.</li>\n<li>toolbarSettings - Specifies the group of items aligned horizontally in the toolbar.</li>\n<li>uploadSettings - Specifies the upload settings for the image manager.</li>\n</ul>\n","type":"FileManagerSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#filemanagersettings"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/insert-emoticons":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/online-html-editor":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/image-editor-integration":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"placeholder","description":"<p>Specifies the placeholder for the RichTextEditor’s content used when the Rich Text Editor body is empty.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#placeholder"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/export-word":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers after command execution using toolbar items or executeCommand method.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/import-word":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers after command execution using toolbar items or executeCommand method.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/mention-integration":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"placeholder","description":"<p>Specifies the placeholder for the RichTextEditor’s content used when the Rich Text Editor body is empty.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#placeholder"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/smart-suggestion":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"placeholder","description":"<p>Specifies the placeholder for the RichTextEditor’s content used when the Rich Text Editor body is empty.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#placeholder"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/types":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"floatingToolbarOffset","description":"<p>Preserves the toolbar at the top of the Rich Text Editor on scrolling and\nspecifies the offset of the floating toolbar from documents top position</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#floatingtoolbaroffset"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers after command execution using toolbar items or executeCommand method.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actioncomplete"},{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#databind"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/quick-format-toolbar":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"quickToolbarSettings","description":"<p>Specifies the items to be rendered in quick toolbar based on the target element.</p>\n<ul>\n<li>It has following fields:</li>\n<li>enable - set boolean value to show or hide the quick toolbar</li>\n<li>actionOnScroll - it has two possible options</li>\n</ul>\n<ol>\n<li>hide: The quickToolbar is closed when the parent element is scrolled.</li>\n<li>none: The quickToolbar cannot be closed even the parent element is scrolled.</li>\n</ol>\n<ul>\n<li>link  - Specifies the items to be rendered in quick toolbar based on link element such as <code>Open</code>, <code>Edit</code>, and <code>UnLink</code>.</li>\n<li>image - Specifies the items to be rendered in quick toolbar based on image element such as 'Replace',\n'Align', 'Caption', 'Remove', 'InsertLink', 'Display', 'AltText', 'Dimension'.</li>\n<li>text\t - Specifies the items to be rendered in quick toolbar based on text element such as 'Cut', 'Copy', 'Paste'.</li>\n</ul>\n","type":"QuickToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#quicktoolbarsettings"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"dataBind","description":"<p>When invoked, applies the pending property changes immediately to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#databind"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/insert-special-characters":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"value","description":"<p>Specifies the value displayed in the RichTextEditor's content area and it should be string.\nThe content of Rich Text Editor can be loaded with dynamic data such as database, AJAX content, and more.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#value"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/markdown-editor":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"height","description":"<p>Specifies the height of the Rich Text Editor component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#height"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"disableToolbarItem","description":"<p>Disables the given toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#disabletoolbaritem"},{"name":"enableToolbarItem","description":"<p>Enables the give toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabletoolbaritem"},{"name":"editorMode","description":"<p>Specifies the editing mode of the RichTextEditor.</p>\n<ul>\n<li>\n<p><code>HTML</code> - Render Rich Text Editor as HTML editor using &lt;IFRAME&gt; element or content editable &lt;div&gt; element\nor &lt;textarea&gt; element.</p>\n</li>\n<li>\n<p><code>Markdown</code> - Render Rich Text Editor as markdown editor using &lt;textarea&gt;.</p>\n</li>\n</ul>\n","type":"EditorMode","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#editormode"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/markdown-editor-preview":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"height","description":"<p>Specifies the height of the Rich Text Editor component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#height"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"disableToolbarItem","description":"<p>Disables the given toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#disabletoolbaritem"},{"name":"enableToolbarItem","description":"<p>Enables the give toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabletoolbaritem"},{"name":"editorMode","description":"<p>Specifies the editing mode of the RichTextEditor.</p>\n<ul>\n<li>\n<p><code>HTML</code> - Render Rich Text Editor as HTML editor using &lt;IFRAME&gt; element or content editable &lt;div&gt; element\nor &lt;textarea&gt; element.</p>\n</li>\n<li>\n<p><code>Markdown</code> - Render Rich Text Editor as markdown editor using &lt;textarea&gt;.</p>\n</li>\n</ul>\n","type":"EditorMode","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#editormode"},{"name":"actionBegin","description":"<p>Triggers before command execution using toolbar items or executeCommand method.\nIf you cancel this event, the command cannot be executed.\nSet the cancel argument to true to cancel the command execution.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#actionbegin"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"richtexteditor/markdown-editor-custom-format":[{"name":"Inject","description":"<p>Dynamically injects the required modules to the component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#inject"},{"name":"toolbarSettings","description":"<p>Specifies the group of items aligned horizontally in the toolbar as well as defined the toolbar rendering type.\nBy default, toolbar is float at the top of the RichTextEditor.\nWhen you scroll down, the toolbar will scroll along with the page on Rich Text Editor with the specified offset value.</p>\n<ul>\n<li>enable: set boolean value to show or hide the toolbar.</li>\n<li>enableFloating: Set Boolean value to enable or disable the floating toolbar.\nPreserves the toolbar at top of the Rich Text Editor on scrolling.</li>\n<li>type: it has two possible options</li>\n</ul>\n<ol>\n<li>Expand: Hide the overflowing toolbar items in the next row. Click the expand arrow to view overflowing toolbar items</li>\n<li>MultiRow: The toolbar overflowing items wrapped in the next row.</li>\n</ol>\n<ul>\n<li>items: Specifies the array of items aligned horizontally in the toolbar.</li>\n</ul>\n<blockquote>\n<p>| and - can insert a vertical and horizontal separator lines in the toolbar.</p>\n</blockquote>\n<ul>\n<li>itemConfigs: Modify the default toolbar item configuration like icon class.</li>\n</ul>\n<blockquote>\n<p>By default, The toolbar is rendered with scrollable in mobile devices and does not support the toolbar type.</p>\n</blockquote>\n","type":"ToolbarSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#toolbarsettings"},{"name":"height","description":"<p>Specifies the height of the Rich Text Editor component.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#height"},{"name":"created","description":"<p>Triggers when the Rich Text Editor is rendered.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#created"},{"name":"disableToolbarItem","description":"<p>Disables the given toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#disabletoolbaritem"},{"name":"enableToolbarItem","description":"<p>Enables the give toolbar items in the Rich Text Editor component.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#enabletoolbaritem"},{"name":"editorMode","description":"<p>Specifies the editing mode of the RichTextEditor.</p>\n<ul>\n<li>\n<p><code>HTML</code> - Render Rich Text Editor as HTML editor using &lt;IFRAME&gt; element or content editable &lt;div&gt; element\nor &lt;textarea&gt; element.</p>\n</li>\n<li>\n<p><code>Markdown</code> - Render Rich Text Editor as markdown editor using &lt;textarea&gt;.</p>\n</li>\n</ul>\n","type":"EditorMode","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#editormode"},{"name":"formatter","description":"<p>Customize keyCode to change the key value.</p>\n","type":"IFormatter","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#formatter"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/rich-text-editor/#appendto"}],"rangeslider/default":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"}],"rangeslider/ticks":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"enabled","description":"<p>Enable or Disable the slider.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enabled"}],"rangeslider/tooltip":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"showButtons","description":"<p>Specifies whether to show or hide the increase/decrease buttons\nof Slider to change the slider value.\nRefer the documentation <a href=\"../../slider/getting-started#buttons\">here</a>\nto know more about this property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#showbuttons"}],"rangeslider/orientation":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"orientation","description":"<p>Specifies whether to render the slider in vertical or horizontal orientation.\nRefer the documentation <a href=\"../../slider/orientation/\">here</a>\nto know more about this property.</p>\n","type":"SliderOrientation","link":"//ej2.syncfusion.com/react/documentation/api/slider/#orientation"}],"rangeslider/format":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"step","description":"<p>Specifies the step value for each value change when the increase / decrease\nbutton is clicked or on arrow keys press or on dragging the thumb.\nRefer the documentation <a href=\"../../slider/ticks#step\">here</a>\nto know more about this property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#step"},{"name":"tooltipChange","description":"<p>Triggers when the Sider tooltip value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#tooltipchange"},{"name":"renderingTicks","description":"<p>Triggers on rendering the ticks element in the Slider,\nwhich is used to customize the ticks labels dynamically.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#renderingticks"}],"rangeslider/limits":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"limits","description":"<p>Specified the limit within which the slider to be moved.\nRefer the documentation <a href=\"../../slider/limits\">here</a>\nto know more about this property.</p>\n","type":"LimitDataModel","link":"//ej2.syncfusion.com/react/documentation/api/slider/#limits"}],"rangeslider/api":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"step","description":"<p>Specifies the step value for each value change when the increase / decrease\nbutton is clicked or on arrow keys press or on dragging the thumb.\nRefer the documentation <a href=\"../../slider/ticks#step\">here</a>\nto know more about this property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#step"},{"name":"showButtons","description":"<p>Specifies whether to show or hide the increase/decrease buttons\nof Slider to change the slider value.\nRefer the documentation <a href=\"../../slider/getting-started#buttons\">here</a>\nto know more about this property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#showbuttons"},{"name":"enabled","description":"<p>Enable or Disable the slider.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/slider/#enabled"},{"name":"orientation","description":"<p>Specifies whether to render the slider in vertical or horizontal orientation.\nRefer the documentation <a href=\"../../slider/orientation/\">here</a>\nto know more about this property.</p>\n","type":"SliderOrientation","link":"//ej2.syncfusion.com/react/documentation/api/slider/#orientation"}],"rangeslider/events":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"change","description":"<p>We can trigger change event whenever Slider value is changed.\nIn other term, this event will be triggered while drag the slider thumb.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#change"},{"name":"created","description":"<p>Triggers when the Slider is successfully created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#created"}],"rangeslider/thumb-customization":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"}],"rangeslider/selection-bar-customization":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"change","description":"<p>We can trigger change event whenever Slider value is changed.\nIn other term, this event will be triggered while drag the slider thumb.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#change"},{"name":"created","description":"<p>Triggers when the Slider is successfully created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#created"}],"rangeslider/ticks-customization":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"step","description":"<p>Specifies the step value for each value change when the increase / decrease\nbutton is clicked or on arrow keys press or on dragging the thumb.\nRefer the documentation <a href=\"../../slider/ticks#step\">here</a>\nto know more about this property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#step"},{"name":"renderingTicks","description":"<p>Triggers on rendering the ticks element in the Slider,\nwhich is used to customize the ticks labels dynamically.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#renderingticks"},{"name":"renderedTicks","description":"<p>Triggers when the ticks are rendered on the Slider.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#renderedticks"}],"rangeslider/tooltip-customization":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"step","description":"<p>Specifies the step value for each value change when the increase / decrease\nbutton is clicked or on arrow keys press or on dragging the thumb.\nRefer the documentation <a href=\"../../slider/ticks#step\">here</a>\nto know more about this property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#step"},{"name":"tooltipChange","description":"<p>Triggers when the Sider tooltip value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#tooltipchange"},{"name":"renderingTicks","description":"<p>Triggers on rendering the ticks element in the Slider,\nwhich is used to customize the ticks labels dynamically.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#renderingticks"},{"name":"created","description":"<p>Triggers when the Slider is successfully created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#created"}],"rangeslider/azure-pricing":[{"name":"value","description":"<p>It is used to denote the current value of the Slider.\nThe value should be specified in array of number when render Slider type as range.</p>\n","type":"number|number[]","link":"//ej2.syncfusion.com/react/documentation/api/slider/#value"},{"name":"type","description":"<p>Defines the type of the Slider. The available options are:</p>\n<ul>\n<li>default - Allows to a single value in the Slider.</li>\n<li>minRange - Allows to select a single value in the Slider. It display’s a shadow from the start to the current value.</li>\n<li>range - Allows to select a range of values in the Slider. It displays shadow in-between the selection range.</li>\n</ul>\n","type":"SliderType","link":"//ej2.syncfusion.com/react/documentation/api/slider/#type"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/slider/#appendto"},{"name":"min","description":"<p>Gets/Sets the minimum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#min"},{"name":"max","description":"<p>Gets/Sets the maximum value of the slider.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#max"},{"name":"step","description":"<p>Specifies the step value for each value change when the increase / decrease\nbutton is clicked or on arrow keys press or on dragging the thumb.\nRefer the documentation <a href=\"../../slider/ticks#step\">here</a>\nto know more about this property.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/slider/#step"},{"name":"created","description":"<p>Triggers when the Slider is successfully created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/slider/#created"}],"querybuilder/default":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"dataSource","description":"<p>Binds the column name from data source in query-builder.\nThe <code>dataSource</code> is an array of JavaScript objects.</p>\n","type":"Object[]|Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#datasource"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"created","description":"<p>Triggers when the component is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#created"}],"querybuilder/complex-databinding":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"fieldMode","description":"<p>Specifies the fieldMode as DropDownList or DropDownTree.</p>\n","type":"FieldMode","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#fieldmode"}],"querybuilder/grid":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"dataSource","description":"<p>Binds the column name from data source in query-builder.\nThe <code>dataSource</code> is an array of JavaScript objects.</p>\n","type":"Object[]|Object|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#datasource"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/mongo-sql":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/lock-group":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/clone-group":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/drag-drop":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/separate-connector":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/template":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"ruleChange","description":"<p>Triggers when changing the condition(AND/OR), field, value, operator is changed</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rulechange"}],"querybuilder/rule-template":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"}],"querybuilder/header-template":[{"name":"width","description":"<p>Specifies the width of the query builder.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#width"},{"name":"columns","description":"<p>Specifies columns to create filters.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#columns"},{"name":"rule","description":"<p>Defines rules in the QueryBuilder.\nSpecifies the initial rule, which is JSON data.</p>\n","type":"RuleModel","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#rule"},{"name":"headerTemplate","description":"<p>Specifies the template for the header with any other widgets.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/query-builder/#headertemplate"}],"pdfviewer/default":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"}],"pdfviewer/read-only":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/document-list":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"}],"pdfviewer/multi-format-viewer":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"}],"pdfviewer/organize-pages":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/custom-toolbar":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"},{"name":"pageChange","description":"<p>Triggers when there is change in current page number.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagechange"},{"name":"enableToolbar","description":"<p>Enable or disables the toolbar of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletoolbar"}],"pdfviewer/custom-context-menu":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"},{"name":"pageChange","description":"<p>Triggers when there is change in current page number.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#pagechange"},{"name":"enableToolbar","description":"<p>Enable or disables the toolbar of PdfViewer.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enabletoolbar"}],"pdfviewer/right-to-left":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"enableRtl","description":"<p>Enable or disable rendering component in right to left direction.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#enablertl"}],"pdfviewer/form-filling":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"}],"pdfviewer/form-designer":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/esigning-form-designer":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/esigning-pdf-forms":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/annotations":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/hand-written":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"pdfviewer/invisible-signature":[{"name":"serviceUrl","description":"<p>Defines the service url of the PdfViewer control.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#serviceurl"},{"name":"documentPath","description":"<p>Sets the PDF document path for initial loading.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentpath"},{"name":"documentLoad","description":"<p>Triggers while loading document into PDF viewer.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/pdfviewer/#documentload"}],"otpinput/default":[{"name":"value","description":"<p>Specifies the value of the Otp (One-Time Password) input.\nThis can be a string or a number, representing the Otp value entered by the user.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#value"},{"name":"type","description":"<p>Specifies the input type of the Otp.</p>\n","type":"string|OtpInputType","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#type"}],"otpinput/api":[{"name":"value","description":"<p>Specifies the value of the Otp (One-Time Password) input.\nThis can be a string or a number, representing the Otp value entered by the user.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#value"},{"name":"stylingMode","description":"<p>Specifies the style variant for the input fields in the Otp Input component.</p>\n","type":"string|OtpInputStyle","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#stylingmode"},{"name":"placeholder","description":"<p>Specifies the text that is shown as a hint/placeholder until the user focuses on or enters a value in the Otp Input.\nIf a single text is provided, it will be used for all input fields; otherwise, each text letter will be used for each field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#placeholder"},{"name":"separator","description":"<p>Specifies the separator used to separate each input field in the Otp Input component.\nThe separator is displayed between each input field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#separator"},{"name":"cssClass","description":"<p>Defines one or more CSS classes that can be used to customize the appearance of the Otp (One-Time Password) input component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#cssclass"},{"name":"disabled","description":"<p>Specifies whether the Otp input component is disabled.\nWhen set to true, the component is disabled and user input is not allowed.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#disabled"},{"name":"length","description":"<p>Specifies the length of the Otp (One-Time Password) to be entered by the user.\nThis determines the number of input fields in the Otp Input.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/otp-input/#length"}],"numerictextbox/default":[{"name":"value","description":"<p>Sets the value of the NumericTextBox.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#value"},{"name":"format","description":"<p>Specifies the number format that indicates the display format for the value of the NumericTextBox.\nFor more information on formats, refer to\n<a href=\"../../numerictextbox/formats/#standard-formats\">formats</a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#format"},{"name":"min","description":"<p>Specifies a minimum value that is allowed a user can enter.\nFor more information on min, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">min</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#min"},{"name":"max","description":"<p>Specifies a maximum value that is allowed a user can enter.\nFor more information on max, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">max</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#max"},{"name":"step","description":"<p>Specifies the incremental or decremental step size for the NumericTextBox.\nFor more information on step, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">step</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#step"}],"numerictextbox/range-validation":[{"name":"value","description":"<p>Sets the value of the NumericTextBox.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#value"},{"name":"min","description":"<p>Specifies a minimum value that is allowed a user can enter.\nFor more information on min, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">min</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#min"},{"name":"max","description":"<p>Specifies a maximum value that is allowed a user can enter.\nFor more information on max, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">max</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#max"},{"name":"step","description":"<p>Specifies the incremental or decremental step size for the NumericTextBox.\nFor more information on step, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">step</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#step"}],"numerictextbox/custom-format":[{"name":"value","description":"<p>Sets the value of the NumericTextBox.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#value"},{"name":"format","description":"<p>Specifies the number format that indicates the display format for the value of the NumericTextBox.\nFor more information on formats, refer to\n<a href=\"../../numerictextbox/formats/#standard-formats\">formats</a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#format"},{"name":"min","description":"<p>Specifies a minimum value that is allowed a user can enter.\nFor more information on min, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">min</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#min"},{"name":"max","description":"<p>Specifies a maximum value that is allowed a user can enter.\nFor more information on max, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">max</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#max"}],"numerictextbox/restrict-decimals":[{"name":"value","description":"<p>Sets the value of the NumericTextBox.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#value"},{"name":"format","description":"<p>Specifies the number format that indicates the display format for the value of the NumericTextBox.\nFor more information on formats, refer to\n<a href=\"../../numerictextbox/formats/#standard-formats\">formats</a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#format"},{"name":"min","description":"<p>Specifies a minimum value that is allowed a user can enter.\nFor more information on min, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">min</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#min"},{"name":"max","description":"<p>Specifies a maximum value that is allowed a user can enter.\nFor more information on max, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">max</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#max"},{"name":"step","description":"<p>Specifies the incremental or decremental step size for the NumericTextBox.\nFor more information on step, refer to\n<a href=\"../../numerictextbox/getting-started/#range-validation\">step</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#step"},{"name":"decimals","description":"<p>Specifies the number precision applied to the textbox value when the NumericTextBox is focused.\nFor more information on decimals, refer to\n<a href=\"../../numerictextbox/formats/#precision-of-numbers\">decimals</a>.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#decimals"},{"name":"validateDecimalOnType","description":"<p>Specifies whether the decimals length should be restricted during typing.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/numerictextbox/#validatedecimalontype"}],"menu/default":[{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as Menu.</p>\n","type":"MenuItemModel[]|[]","link":"//ej2.syncfusion.com/react/documentation/api/menu/#items"},{"name":"orientation","description":"<p>Specified the orientation of Menu whether it can be horizontal or vertical.</p>\n","type":"Orientation","link":"//ej2.syncfusion.com/react/documentation/api/menu/#orientation"}],"menu/data-binding":[{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as Menu.</p>\n","type":"MenuItemModel[]|[]","link":"//ej2.syncfusion.com/react/documentation/api/menu/#items"}],"menu/scrollable":[{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as Menu.</p>\n","type":"MenuItemModel[]|[]","link":"//ej2.syncfusion.com/react/documentation/api/menu/#items"},{"name":"enableScrolling","description":"<p>Specifies whether to enable / disable the scrollable option in Menu.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enablescrolling"},{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Menu wrapper.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#cssclass"},{"name":"beforeOpen","description":"<p>Triggers before opening the menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/menu/#beforeopen"}],"menu/template":[{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as Menu.</p>\n","type":"MenuItemModel[]|[]","link":"//ej2.syncfusion.com/react/documentation/api/menu/#items"},{"name":"fields","description":"<p>Specifies mapping fields from the dataSource.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/menu/#fields"},{"name":"template","description":"<p>Specifies the template for Menu item.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/menu/#template"}],"menu/hamburger-mode":[{"name":"hamburgerMode","description":"<p>Specifies whether to enable / disable the hamburger mode in Menu.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#hamburgermode"},{"name":"title","description":"<p>Specifies the title text for hamburger mode in Menu.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/menu/#title"}],"menu/api":[{"name":"orientation","description":"<p>Specified the orientation of Menu whether it can be horizontal or vertical.</p>\n","type":"Orientation","link":"//ej2.syncfusion.com/react/documentation/api/menu/#orientation"},{"name":"showItemOnClick","description":"<p>Specifies whether to show the sub menu or not on click.\nWhen set to true, the sub menu will open only on mouse click.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/menu/#showitemonclick"},{"name":"enableItems","description":"<p>This method is used to enable or disable the menu items in the Menu based on the items and enable argument.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/menu/#enableitems"}],"menu/toolbar-integration":[{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as Menu.</p>\n","type":"MenuItemModel[]|[]","link":"//ej2.syncfusion.com/react/documentation/api/menu/#items"}],"maskedtextbox/default":[{"name":"mask","description":"<p>Sets a value that masks the MaskedTextBox to allow/validate the user input.</p>\n<ul>\n<li>Mask allows <a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\"><code>standard mask elements</code></a>\n&lt;/b&gt;, &lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#custom-characters\"><code>custom characters</code></a>&lt;/b&gt; and\n&lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#regular-expression\"><code>regular expression</code></a>&lt;/b&gt; as mask\nelements.\nFor more information on mask, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\">mask</a>.</li>\n<li>If the mask value is empty, the MaskedTextBox will behave as an input element with text type.</li>\n</ul>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#mask"}],"maskedtextbox/custom-mask":[{"name":"mask","description":"<p>Sets a value that masks the MaskedTextBox to allow/validate the user input.</p>\n<ul>\n<li>Mask allows <a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\"><code>standard mask elements</code></a>\n&lt;/b&gt;, &lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#custom-characters\"><code>custom characters</code></a>&lt;/b&gt; and\n&lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#regular-expression\"><code>regular expression</code></a>&lt;/b&gt; as mask\nelements.\nFor more information on mask, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\">mask</a>.</li>\n<li>If the mask value is empty, the MaskedTextBox will behave as an input element with text type.</li>\n</ul>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#mask"},{"name":"customCharacters","description":"<p>Sets the collection of values to be mapped for non-mask elements(literals)\nwhich have been set in the mask of MaskedTextBox.\nIn the below example, non-mask elements &quot;P&quot; accepts values\n&quot;P&quot; , &quot;A&quot; , &quot;p&quot; , &quot;a&quot; and &quot;M&quot; accepts values &quot;M&quot;, &quot;m&quot; mentioned in the custom characters collection.</p>\n<blockquote>\n<p>For more information on customCharacters, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#custom-characters\">customCharacters</a>.</p>\n</blockquote>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#customcharacters"},{"name":"floatLabelType","description":"<p>The &lt;b&gt;&lt;a href=&quot;#placeholder&quot; target=&quot;_blank&quot;&gt;placeholder&lt;/a&gt;&lt;/b&gt; acts as a label\nand floats above the MaskedTextBox based on the below values.\nPossible values are:</p>\n<ul>\n<li>Never - The floating label will not be enable when the placeholder is available.</li>\n<li>Always - The floating label always floats above the MaskedTextBox.</li>\n<li>Auto - The floating label floats above the MaskedTextBox after focusing it or when enters the value in it.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#floatlabeltype"}],"maskedtextbox/formats":[{"name":"mask","description":"<p>Sets a value that masks the MaskedTextBox to allow/validate the user input.</p>\n<ul>\n<li>Mask allows <a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\"><code>standard mask elements</code></a>\n&lt;/b&gt;, &lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#custom-characters\"><code>custom characters</code></a>&lt;/b&gt; and\n&lt;b&gt;<a href=\"../../maskedtextbox/mask-configuration/#regular-expression\"><code>regular expression</code></a>&lt;/b&gt; as mask\nelements.\nFor more information on mask, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#standard-mask-elements\">mask</a>.</li>\n<li>If the mask value is empty, the MaskedTextBox will behave as an input element with text type.</li>\n</ul>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#mask"},{"name":"floatLabelType","description":"<p>The &lt;b&gt;&lt;a href=&quot;#placeholder&quot; target=&quot;_blank&quot;&gt;placeholder&lt;/a&gt;&lt;/b&gt; acts as a label\nand floats above the MaskedTextBox based on the below values.\nPossible values are:</p>\n<ul>\n<li>Never - The floating label will not be enable when the placeholder is available.</li>\n<li>Always - The floating label always floats above the MaskedTextBox.</li>\n<li>Auto - The floating label floats above the MaskedTextBox after focusing it or when enters the value in it.</li>\n</ul>\n","type":"FloatLabelType","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#floatlabeltype"},{"name":"change","description":"<p>Triggers when the value of the MaskedTextBox changes.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#change"},{"name":"promptChar","description":"<p>Gets or sets a value that will be shown as a prompting symbol for the masked value.\nThe symbol used to show input positions in the MaskedTextBox.\nFor more information on prompt-character, refer to\n<a href=\"../../maskedtextbox/mask-configuration/#prompt-character\">prompt-character</a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#promptchar"},{"name":"getMaskedValue","description":"<p>Gets the value of the MaskedTextBox with the masked format.\nBy using <code>value</code> property, you can get the raw value of maskedtextbox without literals and prompt characters.</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#getmaskedvalue"},{"name":"value","description":"<p>Gets or sets the value of the MaskedTextBox. It is a raw value of the MaskedTextBox excluding literals\nand prompt characters. By using <code>getMaskedValue</code> property, you can get the value of MaskedTextBox with the masked format.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/maskedtextbox/#value"}],"listview/default":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/remote-list":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"headerTitle","description":"<p>The <code>headerTitle</code> is used to set the title of the ListView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertitle"},{"name":"showHeader","description":"<p>If <code>showHeader</code> set to true, which will show or hide the header of the ListView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showheader"},{"name":"query","description":"<p>The <code>query</code> is used to fetch the specific data from dataSource by using where and select keywords.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#query"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/check-list":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"headerTitle","description":"<p>The <code>headerTitle</code> is used to set the title of the ListView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertitle"},{"name":"showHeader","description":"<p>If <code>showHeader</code> set to true, which will show or hide the header of the ListView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showheader"},{"name":"showIcon","description":"<p>If <code>showIcon</code> set to true, which will show or hide the icon of the list item.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showicon"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/nested-list":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"showCheckBox","description":"<p>If <code>showCheckBox</code> set to true, which will show or hide the checkbox.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showcheckbox"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/virtualization":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"headerTitle","description":"<p>The <code>headerTitle</code> is used to set the title of the ListView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertitle"},{"name":"height","description":"<p>Defines the height of the ListView component which accepts both string and number values.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#height"},{"name":"showHeader","description":"<p>If <code>showHeader</code> set to true, which will show or hide the header of the ListView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showheader"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, which will increase the ListView performance, while loading a large amount of data.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#enablevirtualization"},{"name":"actionComplete","description":"<p>Triggers when every ListView actions completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#actioncomplete"},{"name":"actionBegin","description":"<p>Triggers when every ListView action starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#actionbegin"},{"name":"template","description":"<p>The ListView component supports to customize the content of each list items with the help of <code>template</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#template"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/template":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"headerTitle","description":"<p>The <code>headerTitle</code> is used to set the title of the ListView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertitle"},{"name":"showHeader","description":"<p>If <code>showHeader</code> set to true, which will show or hide the header of the ListView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showheader"},{"name":"template","description":"<p>The ListView component supports to customize the content of each list items with the help of <code>template</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#template"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/group-template":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"headerTitle","description":"<p>The <code>headerTitle</code> is used to set the title of the ListView component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#headertitle"},{"name":"showHeader","description":"<p>If <code>showHeader</code> set to true, which will show or hide the header of the ListView component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showheader"},{"name":"template","description":"<p>The ListView component supports to customize the content of each list items with the help of <code>template</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#template"},{"name":"groupTemplate","description":"<p>The ListView has an option to custom design the group header title with the help of <code>groupTemplate</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#grouptemplate"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/call-history":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"select","description":"<p>Triggers when we select the list item in the component.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#select"},{"name":"showIcon","description":"<p>If <code>showIcon</code> set to true, which will show or hide the icon of the list item.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#showicon"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"}],"listview/scrolling":[{"name":"dataSource","description":"<p>The <code>dataSource</code> provides the data to render the ListView component which is mapped with the fields of ListView.</p>\n","type":"[]|string[]|number[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#datasource"},{"name":"fields","description":"<p>The <code>fields</code> is used to map keys from the dataSource which extracts the appropriate data from the dataSource\nwith specified mapped with the column fields to render the ListView.</p>\n","type":"FieldSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#fields"},{"name":"appendTo","description":"<p>Appends the control within the given HTML element</p>\n","type":"Method","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#appendto"},{"name":"template","description":"<p>The ListView component supports to customize the content of each list items with the help of <code>template</code> property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/list-view/#template"}],"kanban/overview":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"},{"name":"enableTooltip","description":"<p>Enables or disables the tooltip in Kanban board. The property relates to the tooltipTemplate property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enabletooltip"}],"kanban/default":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"dialogSettings","description":"<p>Defines the dialog settings such as template and fields.</p>\n","type":"DialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogsettings"}],"kanban/swimlane":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"}],"kanban/workflow":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"}],"kanban/stacked-header":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"stackedHeaders","description":"<p>Defines the stacked header for Kanban columns with text and key fields.</p>\n","type":"StackedHeadersModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#stackedheaders"}],"kanban/dialog-editing":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"dialogSettings","description":"<p>Defines the dialog settings such as template and fields.</p>\n","type":"DialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogsettings"},{"name":"dialogOpen","description":"<p>Triggers before the dialog opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogopen"}],"kanban/search-filter":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"},{"name":"query","description":"<p>Defines the external <a href=\"http://ej2.syncfusion.com/documentation/data/api-query.html\"><code>query</code></a>\nthat will be executed along with the data processing.</p>\n","type":"Query","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#query"}],"kanban/sorting":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"sortSettings","description":"<p>Defines the sort settings such as field and direction.</p>\n","type":"SortSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#sortsettings"}],"kanban/virtual-scrolling":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"dialogSettings","description":"<p>Defines the dialog settings such as template and fields.</p>\n","type":"DialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogsettings"},{"name":"enableTooltip","description":"<p>Enables or disables the tooltip in Kanban board. The property relates to the tooltipTemplate property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enabletooltip"}],"kanban/local-data":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"}],"kanban/remote-data":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"allowDragAndDrop","description":"<p>Enables or disables the drag and drop actions in Kanban.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#allowdraganddrop"},{"name":"dialogOpen","description":"<p>Triggers before the dialog opens.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogopen"}],"kanban/header-template":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"}],"kanban/swimlane-template":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"}],"kanban/card-template":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"dialogSettings","description":"<p>Defines the dialog settings such as template and fields.</p>\n","type":"DialogSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dialogsettings"}],"kanban/tooltip-template":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"enableTooltip","description":"<p>Enables or disables the tooltip in Kanban board. The property relates to the tooltipTemplate property.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#enabletooltip"},{"name":"tooltipTemplate","description":"<p>Defines the template content to card’s tooltip. The property works by enabling the ‘enableTooltip’ property.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#tooltiptemplate"}],"kanban/toggle-columns":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"}],"kanban/show-hide":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"}],"kanban/wip-validation":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"}],"kanban/api":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"}],"kanban/events":[{"name":"dataSource","description":"<p>With this property, the card data will be bound to Kanban.\nThe card data can be passed either as an array of JavaScript objects,\nor else can create an instance of <a href=\"http://ej2.syncfusion.com/documentation/data/api-dataManager.html\"><code>DataManager</code></a>\nin case of processing remote data and can be assigned to the <code>dataSource</code> property.\nWith the remote data assigned to dataSource, check the available\n<a href=\"http://ej2.syncfusion.com/documentation/data/adaptors.html\">adaptors</a> to customize the data processing.</p>\n","type":"Record[]|DataManager","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#datasource"},{"name":"keyField","description":"<p>Defines the key field of Kanban board. The Kanban renders its layout based on this key field.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#keyfield"},{"name":"height","description":"<p>Sets the <code>height</code> of the Kanban board, accepting both string and number values.\nThe string type includes either pixel or percentage values.\nWhen <code>height</code> is set with specific pixel value, then the Kanban will be rendered to that specified space.\nIn case, if <code>auto</code> value is set, then the height of the Kanban gets auto-adjusted within the given container.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#height"},{"name":"columns","description":"<p>Defines the Kanban board columns and their properties such as header text, key field, template, allow toggle,\nexpand or collapse state, min or max count, and show or hide item count.</p>\n","type":"ColumnsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#columns"},{"name":"cardSettings","description":"<p>Defines the Kanban board related settings such as header field, content field, template,\nshow or hide header, and single or multiple selection.</p>\n","type":"CardSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardsettings"},{"name":"swimlaneSettings","description":"<p>Defines the swimlane settings to Kanban board such as key field, text field, template, allow drag-and-drop,\nshow or hide empty row, show or hide items count, and more.</p>\n","type":"SwimlaneSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#swimlanesettings"},{"name":"created","description":"<p>Triggers after the kanban board is created.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#created"},{"name":"actionBegin","description":"<p>Triggers on beginning of every Kanban action.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actionbegin"},{"name":"actionComplete","description":"<p>Triggers on successful completion of the Kanban actions.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actioncomplete"},{"name":"actionFailure","description":"<p>Triggers when a Kanban action gets failed or interrupted and an error information will be returned.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#actionfailure"},{"name":"dataBinding","description":"<p>Triggers before the data binds to the Kanban.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#databinding"},{"name":"dataBound","description":"<p>Triggers once the event data is bound to the Kanban.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#databound"},{"name":"cardRendered","description":"<p>Triggers before each card of the Kanban rendering on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardrendered"},{"name":"queryCellInfo","description":"<p>Triggers before each column of the Kanban rendering on the page.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#querycellinfo"},{"name":"cardClick","description":"<p>Triggers on single-clicking the Kanban cards.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#cardclick"},{"name":"cardDoubleClick","description":"<p>Triggers on double-clicking the Kanban cards.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#carddoubleclick"},{"name":"dragStart","description":"<p>Triggers when the card drag actions starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dragstart"},{"name":"drag","description":"<p>Triggers when the card is dragging to other stage or other swimlane.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#drag"},{"name":"dragStop","description":"<p>Triggers when the card drag actions stops.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/kanban/#dragstop"}],"inplaceeditor/default":[{"name":"mode","description":"<p>Specifies the mode to be render while editing. The possible modes are :</p>\n<ul>\n<li><code>Inline</code>: Editable content is displayed as inline text and ok/cancel buttons are displayed at right bottom corner of input.</li>\n<li><code>Popup</code>: Editable content and ok/cancel buttons are displayed inside popup while editing.</li>\n</ul>\n","type":"RenderMode","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#mode"},{"name":"type","description":"<p>Specifies the type of components that integrated with In-place editor to make it as editable.</p>\n","type":"InputType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#type"},{"name":"value","description":"<p>Specifies the display value for input when original input value is empty.</p>\n","type":"string|number|Date|string[]|Date[]|number[]","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#value"},{"name":"showButtons","description":"<p>Used to show/hide the ok/cancel buttons of In-place editor.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#showbuttons"},{"name":"disabled","description":"<p>Specifies whether to enable editing mode or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#disabled"}],"inplaceeditor/dropdowns":[{"name":"mode","description":"<p>Specifies the mode to be render while editing. The possible modes are :</p>\n<ul>\n<li><code>Inline</code>: Editable content is displayed as inline text and ok/cancel buttons are displayed at right bottom corner of input.</li>\n<li><code>Popup</code>: Editable content and ok/cancel buttons are displayed inside popup while editing.</li>\n</ul>\n","type":"RenderMode","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#mode"},{"name":"type","description":"<p>Specifies the type of components that integrated with In-place editor to make it as editable.</p>\n","type":"InputType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#type"},{"name":"value","description":"<p>Specifies the display value for input when original input value is empty.</p>\n","type":"string|number|Date|string[]|Date[]|number[]","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#value"},{"name":"enableEditMode","description":"<p>Specifies to show/hide the editing mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enableeditmode"},{"name":"model","description":"<p>Specifies the model object configuration for the integrated components like AutoComplete, DatePicker,NumericTextBox, etc.</p>\n","type":"AutoCompleteModel|ColorPickerModel|ComboBoxModel|DatePickerModel|DateRangePickerModel|DateTimePickerModel|DropDownListModel|MaskedTextBoxModel|MultiSelectModel|NumericTextBoxModel|RichTextEditorModel|SliderModel|TextBoxModel|TimePickerModel","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#model"}],"inplaceeditor/pickers":[{"name":"mode","description":"<p>Specifies the mode to be render while editing. The possible modes are :</p>\n<ul>\n<li><code>Inline</code>: Editable content is displayed as inline text and ok/cancel buttons are displayed at right bottom corner of input.</li>\n<li><code>Popup</code>: Editable content and ok/cancel buttons are displayed inside popup while editing.</li>\n</ul>\n","type":"RenderMode","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#mode"},{"name":"type","description":"<p>Specifies the type of components that integrated with In-place editor to make it as editable.</p>\n","type":"InputType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#type"},{"name":"value","description":"<p>Specifies the display value for input when original input value is empty.</p>\n","type":"string|number|Date|string[]|Date[]|number[]","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#value"},{"name":"enableEditMode","description":"<p>Specifies to show/hide the editing mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#enableeditmode"},{"name":"model","description":"<p>Specifies the model object configuration for the integrated components like AutoComplete, DatePicker,NumericTextBox, etc.</p>\n","type":"AutoCompleteModel|ColorPickerModel|ComboBoxModel|DatePickerModel|DateRangePickerModel|DateTimePickerModel|DropDownListModel|MaskedTextBoxModel|MultiSelectModel|NumericTextBoxModel|RichTextEditorModel|SliderModel|TextBoxModel|TimePickerModel","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#model"}],"inplaceeditor/edit-post":[{"name":"mode","description":"<p>Specifies the mode to be render while editing. The possible modes are :</p>\n<ul>\n<li><code>Inline</code>: Editable content is displayed as inline text and ok/cancel buttons are displayed at right bottom corner of input.</li>\n<li><code>Popup</code>: Editable content and ok/cancel buttons are displayed inside popup while editing.</li>\n</ul>\n","type":"RenderMode","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#mode"},{"name":"type","description":"<p>Specifies the type of components that integrated with In-place editor to make it as editable.</p>\n","type":"InputType","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#type"},{"name":"value","description":"<p>Specifies the display value for input when original input value is empty.</p>\n","type":"string|number|Date|string[]|Date[]|number[]","link":"//ej2.syncfusion.com/react/documentation/api/inplace-editor/#value"}],"imageeditor/default":[{"name":"width","description":"<p>Specifies the width of an Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#width"},{"name":"height","description":"<p>Specifies the height of the Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#height"}],"imageeditor/profile-picture":[{"name":"width","description":"<p>Specifies the width of an Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#width"},{"name":"height","description":"<p>Specifies the height of the Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#height"}],"imageeditor/custom-toolbar":[{"name":"width","description":"<p>Specifies the width of an Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#width"},{"name":"height","description":"<p>Specifies the height of the Image Editor.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/image-editor/#height"}],"heatmapchart/default-functionalities":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"}],"heatmapchart/calendar-heatmap":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"height","description":"<p>Sets and gets the height of the heatmap. The height of the heatmap accepts pixel or percentage values given in string format.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#height"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"}],"heatmapchart/bubble-types":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"}],"heatmapchart/color-and-size-attributes":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"}],"heatmapchart/row":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"}],"heatmapchart/cell":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"}],"heatmapchart/json-row":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"}],"heatmapchart/json-cell":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"}],"heatmapchart/empty-points":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"}],"heatmapchart/inversed-axis":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"}],"heatmapchart/opposed-axis":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"}],"heatmapchart/label-template":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"}],"heatmapchart/multi-level-labels":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"}],"heatmapchart/cell-selection":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"allowSelection","description":"<p>Enable or disable the selection of cells in heatmap.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#allowselection"}],"heatmapchart/legend-placement":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"}],"heatmapchart/large-data":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},{"name":"renderingMode","description":"<p>Specifies the rendering mode of heatmap. The following are the available rendering modes.</p>\n<ul>\n<li>SVG - Heatmap is rendered using SVG element.</li>\n<li>Canvas - Heatmap is rendered using Canvas element.</li>\n<li>Auto - Automatically switches the rendering mode based on number of records in the data source.</li>\n</ul>\n","type":"DrawType","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#renderingmode"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"}],"heatmapchart/palette-mode":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"}],"heatmapchart/color-range":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"}],"heatmapchart/rendering-mode":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"renderingMode","description":"<p>Specifies the rendering mode of heatmap. The following are the available rendering modes.</p>\n<ul>\n<li>SVG - Heatmap is rendered using SVG element.</li>\n<li>Canvas - Heatmap is rendered using Canvas element.</li>\n<li>Auto - Automatically switches the rendering mode based on number of records in the data source.</li>\n</ul>\n","type":"DrawType","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#renderingmode"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"}],"heatmapchart/tooltip-template":[{"name":"titleSettings","description":"<p>Sets and gets the options to customize the title of the heatmap.</p>\n","type":"TitleModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#titlesettings"},{"name":"xAxis","description":"<p>Sets and gets the options to configure the horizontal axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#xaxis"},{"name":"yAxis","description":"<p>Sets and gets the options to configure the vertical axis.</p>\n","type":"AxisModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#yaxis"},{"name":"dataSource","description":"<p>Sets and gets the data to visualize in the heatmap.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#datasource"},{"name":"cellSettings","description":"<p>Sets and gets the options to customize the heatmap cells.</p>\n","type":"CellSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#cellsettings"},{"name":"legendSettings","description":"<p>Sets and gets the options for customizing the legend of the heatmap.</p>\n","type":"LegendSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#legendsettings"},{"name":"paletteSettings","description":"<p>Sets and gets the options for customizing the cell color of the heatmap.</p>\n","type":"PaletteSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#palettesettings"},{"name":"tooltipRender","description":"<p>Triggers before the tooltip of the heatmap is rendered on the heatmap cell.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/heatmap/#tooltiprender"}],"grid/overview":[{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#selectionsettings"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataBound","description":"<p>Triggers when data source is populated in the Grid.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#databound"},{"name":"actionComplete","description":"<p>Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actioncomplete"},{"name":"load","description":"<p>This event allows customization of Grid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#load"}],"grid/live-data":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"enableVirtualMaskRow","description":"<p>Specifies the shimmer effect for Grid virtual and infinite scrolling.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualmaskrow"},{"name":"enableHover","description":"<p>If <code>enableHover</code> is set to true, the row hover is enabled in the Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablehover"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"rowHeight","description":"<p>Defines the height of Grid rows.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowheight"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Grid records by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowselection"},{"name":"queryCellInfo","description":"<p>Triggered every time a request is made to access cell information, element, or data.\nThis will be triggered before the cell element is appended to the Grid element.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#querycellinfo"},{"name":"load","description":"<p>This event allows customization of Grid properties before rendering.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#load"}],"grid/default":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"}],"grid/adaptive-layout":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"rowRenderingMode","description":"<p>Defines the grid row elements rendering direction. The available directions are,</p>\n<ul>\n<li><code>Horizontal</code>: Renders the grid row elements in the horizontal direction</li>\n<li><code>Vertical</code>: Renders the grid row elements in the vertical direction</li>\n</ul>\n","type":"RowRenderingDirection","link":"//ej2.syncfusion.com/react/documentation/api/grid/#rowrenderingmode"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/loading-animation":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"loadingIndicator","description":"<p>Configures the Loading Indicator of the Grid.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#loadingindicator"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/empty-record-template":[{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/local-binding":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/remote-data":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"}],"grid/custom-binding":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"}],"grid/column-template":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"width","description":"<p>Defines the Grid width.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#width"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"}],"grid/stacked-header":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowResizing","description":"<p>If <code>allowResizing</code> is set to true, Grid columns can be resized.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowresizing"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"}],"grid/foreign-key":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"}],"grid/reorder":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowReordering","description":"<p>If <code>allowReordering</code> is set to true, Grid columns can be reordered.\nReordering can be done by drag and drop of a particular column from one index to another index.</p>\n<blockquote>\n<p>If Grid is rendered with stacked headers, reordering is allowed only at the same level as the column headers.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowreordering"},{"name":"actionComplete","description":"<p>Triggers when Grid actions such as sorting, filtering, paging, grouping etc. are completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/grid/#actioncomplete"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/batch":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"}],"grid/filter-menu":[{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/reactive-aggregate":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/lazy-load-grouping-with-paging":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/lazy-load-grouping-with-infinite-scrolling":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableInfiniteScrolling","description":"<p>If <code>enableInfiniteScrolling</code> set to true, then the data will be loaded in Grid when the scrollbar reaches the end.\nThis helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enableinfinitescrolling"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/lazy-load-grouping-with-virtual-scrolling":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Grid will render only the rows visible within the view-port\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Grid.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#enablevirtualization"},{"name":"height","description":"<p>Defines the scrollable height of the grid content.</p>\n","type":"string|number","link":"//ej2.syncfusion.com/react/documentation/api/grid/#height"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"groupSettings","description":"<p>Configures the group settings.</p>\n","type":"GroupSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#groupsettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/advanced-exporting":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowExcelExport","description":"<p>If <code>allowExcelExport</code> set to true, then it will allow the user to export grid to Excel file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/excel-exporting/\"><code>ExcelExport</code></a> to configure exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowexcelexport"},{"name":"allowPdfExport","description":"<p>If <code>allowPdfExport</code> set to true, then it will allow the user to export grid to Pdf file.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/pdf-export/\"><code>Pdfexport</code></a> to configure the exporting document.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpdfexport"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"}],"grid/keyboard-navigation":[{"name":"dataSource","description":"<p>It is used to render grid table rows.\nIf the <code>dataSource</code> is an array of JavaScript objects,\nthen Grid will create instance of <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>\nfrom this <code>dataSource</code>.\nIf the <code>dataSource</code> is an existing <a href=\"https://ej2.syncfusion.com/documentation/api/data/dataManager/\"><code>DataManager</code></a>,\nthe Grid will not initialize a new one.</p>\n<blockquote>\n<p>Check the available <a href=\"../../data/adaptors/\"><code>Adaptors</code></a> to customize the data operation.</p>\n</blockquote>\n","type":"Object|DataManager|DataResult","link":"//ej2.syncfusion.com/react/documentation/api/grid/#datasource"},{"name":"allowFiltering","description":"<p>If <code>allowFiltering</code> set to true the filter bar will be displayed.\nIf set to false the filter bar will not be displayed.\nFilter bar allows the user to filter grid records with required criteria.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/filtering/\"><code>Filtering</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowfiltering"},{"name":"columns","description":"<p>Defines the schema of dataSource.\nIf the <code>columns</code> declaration is empty or undefined then the <code>columns</code> are automatically generated from data source.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#columns"},{"name":"allowGrouping","description":"<p>If <code>allowGrouping</code> set to true, then it will allow the user to dynamically group or ungroup columns.\nGrouping can be done by drag and drop columns from column header to group drop area.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/grouping/\"><code>Grouping</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowgrouping"},{"name":"allowPaging","description":"<p>If <code>allowPaging</code> is set to true, the pager renders at the footer of the Grid. It is used to handle page navigation in the Grid.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/paging/\"><code>Paging</code></a> to configure the grid pager.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowpaging"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of grid records when column header is clicked.</p>\n<blockquote>\n<p>Check the <a href=\"../../grid/sorting/\"><code>Sorting</code></a> to customize its default behavior.</p>\n</blockquote>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/grid/#allowsorting"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the ToolBar items of the Grid.\nIt contains built-in and custom toolbar items.\nIf a string value is assigned to the <code>toolbar</code> option, it is considered as the template for the whole Grid ToolBar.\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Grid's Toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in ToolBar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected record.</li>\n<li>Update: Updates the edited record.</li>\n<li>Delete: Deletes the selected record.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches records by the given key.</li>\n<li>Print: Prints the Grid.</li>\n<li>ExcelExport - Export the Grid to Excel(excelExport() method manually to make export.)</li>\n<li>PdfExport - Export the Grid to PDF(pdfExport() method manually to make export.)</li>\n<li>CsvExport - Export the Grid to CSV(csvExport() method manually to make export.)&lt;br&gt;&lt;br&gt;\nThe following code example implements the custom toolbar items.</li>\n</ul>\n<blockquote>\n<p>Check the <a href=\"../../grid/tool-bar/#custom-toolbar-items/\"><code>Toolbar</code></a> to customize its default items.</p>\n</blockquote>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/grid/#toolbar"},{"name":"filterSettings","description":"<p>Configures the filter settings of the Grid.</p>\n","type":"FilterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#filtersettings"},{"name":"pageSettings","description":"<p>Configures the pager in the Grid.</p>\n","type":"PageSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#pagesettings"},{"name":"editSettings","description":"<p>Configures the edit settings.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/grid/#editsettings"}],"gantt/overview":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"eventMarkers","description":"<p>Defines events and status of project throughout the timeline.</p>\n","type":"EventMarkerModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#eventmarkers"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"}],"gantt/default":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"eventMarkers","description":"<p>Defines events and status of project throughout the timeline.</p>\n","type":"EventMarkerModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#eventmarkers"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"}],"gantt/editing":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"dateFormat","description":"<p>Specifies the dateFormat for Gantt, given format is displayed in tooltip and Grid cells.\nBy default, the format is based on the culture.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#dateformat"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"editSettings","description":"<p>Configures edit settings of Gantt.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#editsettings"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the toolbar items of the Gantt.\nIt contains built-in and custom toolbar items\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Gantt's toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in toolbar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected task.</li>\n<li>Update: Updates the edited task.</li>\n<li>Delete: Deletes the selected task.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches tasks by the given key.</li>\n<li>ExpandAll: Expands all the task of Gantt.</li>\n<li>CollapseAll: Collapses all the task of Gantt.</li>\n<li>PrevTimeSpan: Extends timeline with one unit before the timeline start date.</li>\n<li>NextTimeSpan: Extends timeline with one unit after the timeline finish date.</li>\n<li>ZoomIn: ZoomIn the Gantt control.</li>\n<li>ZoomOut: ZoomOut the Gantt control.</li>\n<li>ZoomToFit: Display the all tasks within the viewable Gantt chart.</li>\n<li>ExcelExport: To export in Excel format.</li>\n<li>CsvExport : To export in CSV format.</li>\n<li>Indent: To indent a task to one level.</li>\n<li>Outdent: To outdent a task from one level.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#toolbar"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"gridLines","description":"<p>Configures the grid lines in tree grid and gantt chart.</p>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#gridlines"},{"name":"resourceFields","description":"<p>Defines mapping properties to find resource values such as id, name, unit and group from resource collection.</p>\n","type":"ResourceFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resourcefields"},{"name":"resources","description":"<p>Defines resource collection assigned for projects.</p>\n","type":"object[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#resources"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"timelineSettings","description":"<p>Configures timeline settings of Gantt.\nDefines default timeline modes or customized top tier mode and bottom tier mode or single tier only.</p>\n","type":"TimelineSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timelinesettings"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},{"name":"editDialogFields","description":"<p>Defines the tabs and fields to be included in the edit dialog.\nIf the value was empty, then it will be calculated from <code>taskSettings</code> and <code>columns</code> value.</p>\n","type":"EditDialogFieldSettingsModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#editdialogfields"},{"name":"eventMarkers","description":"<p>Defines events and status of project throughout the timeline.</p>\n","type":"EventMarkerModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#eventmarkers"},{"name":"splitterSettings","description":"<p>Configures the splitter settings for Gantt.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"}],"gantt/virtual-scroll":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectionsettings"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Gantt will render only the rows visible within the view-port.\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Gantt.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablevirtualization"}],"gantt/loading-animation":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"selectionSettings","description":"<p>Configures the selection settings.</p>\n","type":"SelectionSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#selectionsettings"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Gantt will render only the rows visible within the view-port.\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Gantt.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablevirtualization"},{"name":"loadingIndicator","description":"<p>Configures the loading indicator of the Gantt Chart. Specifies whether to display spinner or shimmer effect during the waiting time on any actions performed in Gantt Chart.</p>\n","type":"LoadingIndicatorModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#loadingindicator"},{"name":"allowFiltering","description":"<p>Enables or disables filtering support in Gantt.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowfiltering"}],"gantt/local-data":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},{"name":"splitterSettings","description":"<p>Configures the splitter settings for Gantt.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"}],"gantt/load-on-demand":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},{"name":"splitterSettings","description":"<p>Configures the splitter settings for Gantt.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"},{"name":"enableVirtualization","description":"<p>If <code>enableVirtualization</code> set to true, then the Gantt will render only the rows visible within the view-port.\nand load subsequent rows on vertical scrolling. This helps to load large dataset in Gantt.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablevirtualization"},{"name":"loadChildOnDemand","description":"<p>Gets or sets whether to load child record on demand in remote data binding. Initially parent records are rendered in collapsed state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#loadchildondemand"}],"gantt/remote-data":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"gridLines","description":"<p>Configures the grid lines in tree grid and gantt chart.</p>\n","type":"GridLine","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#gridlines"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"timelineSettings","description":"<p>Configures timeline settings of Gantt.\nDefines default timeline modes or customized top tier mode and bottom tier mode or single tier only.</p>\n","type":"TimelineSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timelinesettings"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"includeWeekend","description":"<p>Defines weekend days are considered as working day or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#includeweekend"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"}],"gantt/self-reference-data":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"treeColumnIndex","description":"<p>To define expander column index in Grid.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#treecolumnindex"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"highlightWeekends","description":"<p>If <code>highlightWeekends</code> set to true, then all weekend days are highlighted in week - day timeline mode.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#highlightweekends"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},{"name":"splitterSettings","description":"<p>Configures the splitter settings for Gantt.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"}],"gantt/taskMode":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},{"name":"allowSorting","description":"<p>If <code>allowSorting</code> is set to true, it allows sorting of gantt chart tasks when column header is clicked.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowsorting"},{"name":"enableContextMenu","description":"<p>If <code>enableContextMenu</code> is set to true, Enable context menu in Gantt.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#enablecontextmenu"},{"name":"toolbar","description":"<p><code>toolbar</code> defines the toolbar items of the Gantt.\nIt contains built-in and custom toolbar items\nIf an array value is assigned, it is considered as the list of built-in and custom toolbar items in the Gantt's toolbar.\n&lt;br&gt;&lt;br&gt;\nThe available built-in toolbar items are:</p>\n<ul>\n<li>Add: Adds a new record.</li>\n<li>Edit: Edits the selected task.</li>\n<li>Update: Updates the edited task.</li>\n<li>Delete: Deletes the selected task.</li>\n<li>Cancel: Cancels the edit state.</li>\n<li>Search: Searches tasks by the given key.</li>\n<li>ExpandAll: Expands all the task of Gantt.</li>\n<li>CollapseAll: Collapses all the task of Gantt.</li>\n<li>PrevTimeSpan: Extends timeline with one unit before the timeline start date.</li>\n<li>NextTimeSpan: Extends timeline with one unit after the timeline finish date.</li>\n<li>ZoomIn: ZoomIn the Gantt control.</li>\n<li>ZoomOut: ZoomOut the Gantt control.</li>\n<li>ZoomToFit: Display the all tasks within the viewable Gantt chart.</li>\n<li>ExcelExport: To export in Excel format.</li>\n<li>CsvExport : To export in CSV format.</li>\n<li>Indent: To indent a task to one level.</li>\n<li>Outdent: To outdent a task from one level.</li>\n</ul>\n","type":"[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#toolbar"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"validateManualTasksOnLinking","description":"<p>If <code>validateManualTasksOnLinking</code> is set to true,\nit enables date validation while connecting manually scheduled tasks with predecessor</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#validatemanualtasksonlinking"},{"name":"editSettings","description":"<p>Configures edit settings of Gantt.</p>\n","type":"EditSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#editsettings"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"splitterSettings","description":"<p>Configures the splitter settings for Gantt.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"},{"name":"taskMode","description":"<p>Specifies task schedule mode for a project.</p>\n","type":"ScheduleMode","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskmode"}],"gantt/work-week":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"allowSelection","description":"<p>If <code>allowSelection</code> is set to true, it allows selection of (highlight row) Gantt chart rows by clicking it.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#allowselection"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"workWeek","description":"<p>Defines workweek of project.</p>\n","type":"string[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#workweek"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"}],"gantt/timeline-template":[{"name":"dataSource","description":"<p>It is used to render Gantt chart rows and tasks.\n<code>dataSource</code> value was defined as array of JavaScript objects or instances of <code>DataManager</code>.</p>\n","type":"Object[]|DataManager|Object","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#datasource"},{"name":"taskFields","description":"<p>Defines mapping properties to find task values such as id, start date, end date, duration and progress values from data source.</p>\n","type":"TaskFieldsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#taskfields"},{"name":"columns","description":"<p>Defines column collection displayed in grid\nIf the <code>columns</code> declaration was empty then <code>columns</code> are automatically populated from <code>taskSettings</code> value.</p>\n","type":"Column[]|string[]|ColumnModel[]","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#columns"},{"name":"height","description":"<p>Defines the height of the Gantt component container.</p>\n","type":"number|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#height"},{"name":"projectStartDate","description":"<p>Defines start date of the project, if <code>projectStartDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectstartdate"},{"name":"projectEndDate","description":"<p>Defines end date of the project, if <code>projectEndDate</code> value not set then it will be calculated from data source.</p>\n","type":"Date|string","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#projectenddate"},{"name":"timelineSettings","description":"<p>Configures timeline settings of Gantt.\nDefines default timeline modes or customized top tier mode and bottom tier mode or single tier only.</p>\n","type":"TimelineSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timelinesettings"},{"name":"splitterSettings","description":"<p>Configures the splitter settings for Gantt.</p>\n","type":"SplitterSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#splittersettings"},{"name":"labelSettings","description":"<p>Defines the right, left and inner task labels in task bar.</p>\n","type":"LabelSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#labelsettings"},{"name":"timelineTemplate","description":"<p>Renders customized html elements for timeline cell from the given template.</p>\n","type":"string|Function","link":"//ej2.syncfusion.com/react/documentation/api/gantt/#timelinetemplate"}],"floatingactionbutton/overview":[{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#iconcss"},{"name":"target","description":"<p>Defines the selector that points to an element in which the FAB will be positioned.\nBy default, FAB is positioned based on viewport of browser.\nThe target element must have relative position, else FAB will get positioned based on the closest element which has relative position.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#target"}],"floatingactionbutton/default":[{"name":"isPrimary","description":"<p>Defines whether to apply primary style for FAB.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isprimary"},{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and\nsize can be defined by using\n<a href=\"http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button\"><code>this</code></a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#cssclass"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#iconcss"},{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#content"},{"name":"target","description":"<p>Defines the selector that points to an element in which the FAB will be positioned.\nBy default, FAB is positioned based on viewport of browser.\nThe target element must have relative position, else FAB will get positioned based on the closest element which has relative position.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#target"},{"name":"disabled","description":"<p>Specifies a value that indicates whether the Button is <code>disabled</code> or not.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#disabled"}],"floatingactionbutton/position":[{"name":"position","description":"<p>Defines the position of the FAB relative to target.\nThe possible values are:</p>\n<ul>\n<li>TopLeft: Positions the FAB at the target's top left corner.</li>\n<li>TopCenter: Positions the FAB at the target's top left corner.</li>\n<li>TopRight: Positions the FAB at the target's top left corner.</li>\n<li>MiddleLeft: Positions the FAB at the target's top left corner.</li>\n<li>MiddleCenter: Positions the FAB at the target's top left corner.</li>\n<li>MiddleRight: Positions the FAB at the target's top left corner.</li>\n<li>BottomLeft: Positions the FAB at the target's top left corner.</li>\n<li>BottomCenter: Places the FAB on the bottom-center position of the target.</li>\n<li>BottomRight: Positions the FAB at the target's bottom right corner.</li>\n</ul>\n","type":"string|FabPosition","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#position"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#iconcss"},{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#content"},{"name":"target","description":"<p>Defines the selector that points to an element in which the FAB will be positioned.\nBy default, FAB is positioned based on viewport of browser.\nThe target element must have relative position, else FAB will get positioned based on the closest element which has relative position.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#target"}],"floatingactionbutton/styles":[{"name":"isPrimary","description":"<p>Defines whether to apply primary style for FAB.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#isprimary"},{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and\nsize can be defined by using\n<a href=\"http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button\"><code>this</code></a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#cssclass"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#iconcss"},{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#content"},{"name":"target","description":"<p>Defines the selector that points to an element in which the FAB will be positioned.\nBy default, FAB is positioned based on viewport of browser.\nThe target element must have relative position, else FAB will get positioned based on the closest element which has relative position.</p>\n","type":"string|HTMLElement","link":"//ej2.syncfusion.com/react/documentation/api/floating-action-button/fabComponent#target"}],"datetimepicker/input-mask":[{"name":"enableMask","description":"<p>Specifies whether it is a masked datetimepicker or not.\nBy default the datetimepicker component render without masked input.\nIf you need masked datetimepicker input then specify it as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datetimepicker/#enablemask"}],"daterangepicker/default":[{"name":"placeholder","description":"<p>Specifies the placeholder text that need to be displayed in the DateRangePicker component.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/daterangepicker/#placeholder"}],"datepicker/default":[{"name":"placeholder","description":"<p>Specifies the placeholder text that displayed in textbox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#placeholder"}],"datepicker/input-mask":[{"name":"enableMask","description":"<p>Specifies whether it is a masked datepicker or not.\nBy default the datepicker component render without masked input.\nIf you need masked datepicker input then specify it as true.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/datepicker/#enablemask"}],"contextmenu/default":[{"name":"target","description":"<p>Specifies target element selector in which the ContextMenu should be opened.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#target"},{"name":"items","description":"<p>Specifies menu items with its properties which will be rendered as ContextMenu.</p>\n","type":"MenuItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#items"},{"name":"beforeItemRender","description":"<p>Triggers while rendering each menu item.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#beforeitemrender"},{"name":"animationSettings","description":"<p>Specifies the animation settings for the sub menu open.</p>\n","type":"MenuAnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/context-menu/#animationsettings"}],"colorpicker/default":[{"name":"value","description":"<p>It is used to set the color value for ColorPicker. It should be specified as Hex code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#value"},{"name":"disabled","description":"<p>It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#disabled"}],"colorpicker/inline":[{"name":"value","description":"<p>It is used to set the color value for ColorPicker. It should be specified as Hex code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#value"},{"name":"mode","description":"<p>It is used to render the ColorPicker with the specified mode.</p>\n","type":"ColorPickerMode","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#mode"},{"name":"modeSwitcher","description":"<p>It is used to show / hide the mode switcher button of ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#modeswitcher"},{"name":"inline","description":"<p>It is used to render the ColorPicker component as inline.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#inline"},{"name":"disabled","description":"<p>It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#disabled"}],"colorpicker/custom":[{"name":"value","description":"<p>It is used to set the color value for ColorPicker. It should be specified as Hex code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#value"},{"name":"mode","description":"<p>It is used to render the ColorPicker with the specified mode.</p>\n","type":"ColorPickerMode","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#mode"},{"name":"modeSwitcher","description":"<p>It is used to show / hide the mode switcher button of ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#modeswitcher"},{"name":"inline","description":"<p>It is used to render the ColorPicker component as inline.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#inline"},{"name":"disabled","description":"<p>It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#disabled"},{"name":"presetColors","description":"<p>It is used to load custom colors to palette.</p>\n","type":"Object","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#presetcolors"}],"colorpicker/api":[{"name":"value","description":"<p>It is used to set the color value for ColorPicker. It should be specified as Hex code.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#value"},{"name":"disabled","description":"<p>It is used to enable / disable ColorPicker component. If it is disabled the ColorPicker popup won’t open.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#disabled"},{"name":"modeSwitcher","description":"<p>It is used to show / hide the mode switcher button of ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#modeswitcher"},{"name":"mode","description":"<p>It is used to render the ColorPicker with the specified mode.</p>\n","type":"ColorPickerMode","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#mode"},{"name":"showButtons","description":"<p>It is used to show / hide the control buttons (apply / cancel) of  ColorPicker component.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/color-picker/#showbuttons"}],"calendar/default":[{"name":"change","description":"<p>Triggers when the Calendar value is changed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/calendar/#change"}],"button/default":[{"name":"isPrimary","description":"<p>Allows the appearance of the Button to be enhanced and visually appealing when set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#isprimary"},{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the Button element. The Button types, styles, and\nsize can be defined by using\n<a href=\"http://ej2.syncfusion.com/documentation/button/howto.html?lang=typescript#create-a-block-button\"><code>this</code></a>.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#cssclass"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the Button that is used to include an icon.\nButtons can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#iconcss"},{"name":"isToggle","description":"<p>Makes the Button toggle, when set to <code>true</code>. When you click it, the state changes from normal to active.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/button/#istoggle"},{"name":"iconPosition","description":"<p>Positions the icon before/after the text content in the Button.\nThe possible values are:</p>\n<ul>\n<li>Left: The icon will be positioned to the left of the text content.</li>\n<li>Right: The icon will be positioned to the right of the text content.</li>\n</ul>\n","type":"string|IconPosition","link":"//ej2.syncfusion.com/react/documentation/api/button/#iconposition"},{"name":"content","description":"<p>Defines the text <code>content</code> of the Button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/button/#content"}],"button/checkbox":[{"name":"label","description":"<p>Defines the caption for the CheckBox, that describes the purpose of the CheckBox.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#label"},{"name":"checked","description":"<p>Specifies a value that indicates whether the CheckBox is <code>checked</code> or not.\nWhen set to <code>true</code>, the CheckBox will be in <code>checked</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#checked"},{"name":"indeterminate","description":"<p>Specifies a value that indicates whether the CheckBox is in <code>indeterminate</code> state or not.\nWhen set to <code>true</code>, the CheckBox will be in <code>indeterminate</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#indeterminate"},{"name":"disabled","description":"<p>Specifies a value that indicates whether the CheckBox is <code>disabled</code> or not.\nWhen set to <code>true</code>, the CheckBox will be in <code>disabled</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#disabled"},{"name":"change","description":"<p>Triggers when the CheckBox state has been changed by user interaction.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/check-box/#change"}],"button/radio-button":[{"name":"label","description":"<p>Defines the caption for the RadioButton, that describes the purpose of the RadioButton.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#label"},{"name":"name","description":"<p>Defines <code>name</code> attribute for the RadioButton.\nIt is used to reference form data (RadioButton value) after a form is submitted.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#name"},{"name":"value","description":"<p>Defines <code>value</code> attribute for the RadioButton.\nIt is a form data passed to the server when submitting the form.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#value"},{"name":"checked","description":"<p>Specifies a value that indicates whether the RadioButton is <code>checked</code> or not.\nWhen set to <code>true</code>, the RadioButton will be in <code>checked</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/radio-button/#checked"}],"button/dropdown-button":[{"name":"items","description":"<p>Specifies action items with its properties which will be rendered as DropDownButton popup.</p>\n","type":"ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#items"},{"name":"cssClass","description":"<p>Defines class/multiple classes separated by a space in the DropDownButton element. The\nDropDownButton size and styles can be customized by using this.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#cssclass"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the DropDownButton that is used to\ninclude an icon. DropDownButton can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/drop-down-button/#iconcss"}],"button/split-button":[{"name":"items","description":"<p>Specifies action items with its properties which will be rendered as SplitButton secondary button popup.</p>\n","type":"ItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#items"},{"name":"content","description":"<p>Defines the content of the SplitButton primary action button can either be a text or HTML elements.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#content"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the SplitButton that is used to include an\nicon. SplitButton can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#iconcss"},{"name":"beforeItemRender","description":"<p>Triggers while rendering each Popup item of SplitButton.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/split-button/#beforeitemrender"}],"button/switch":[{"name":"checked","description":"<p>Specifies a value that indicates whether the Switch is <code>checked</code> or not.\nWhen set to <code>true</code>, the Switch will be in <code>checked</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#checked"},{"name":"disabled","description":"<p>Specifies a value that indicates whether the Switch is <code>disabled</code> or not.\nWhen set to <code>true</code>, the Switch will be in <code>disabled</code> state.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/switch/#disabled"}],"button/progress-button":[{"name":"content","description":"<p>Defines the text <code>content</code> of the progress button element.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#content"},{"name":"iconCss","description":"<p>Defines class/multiple classes separated by a space for the progress button that is used to include an icon.\nProgress button can also include font icon and sprite image.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#iconcss"},{"name":"cssClass","description":"<p>Specifies the root CSS class of the progress button that allows customization of component’s appearance.\nThe progress button types, styles, and size can be achieved by using this property.</p>\n","type":"string","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#cssclass"},{"name":"duration","description":"<p>Specifies the duration of progression in the progress button.</p>\n","type":"number","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#duration"},{"name":"disabled","description":"<p>Enables or disables the progress button.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#disabled"},{"name":"isPrimary","description":"<p>Allows the appearance of the progress button to be enhanced and visually appealing when set to <code>true</code>.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#isprimary"},{"name":"enableProgress","description":"<p>Enables or disables the background filler UI in the progress button.</p>\n","type":"boolean","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#enableprogress"},{"name":"end","description":"<p>Triggers when the progress is completed.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#end"},{"name":"begin","description":"<p>Triggers when the progress starts.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#begin"},{"name":"spinSettings","description":"<p>Specifies a spinner and its related properties.</p>\n","type":"SpinSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#spinsettings"},{"name":"animationSettings","description":"<p>Specifies the animation settings.</p>\n","type":"AnimationSettingsModel","link":"//ej2.syncfusion.com/react/documentation/api/progress-button/#animationsettings"}],"breadcrumb/default":[{"name":"items","description":"<p>Defines the list of Breadcrumb items.</p>\n","type":"BreadcrumbItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#items"}],"breadcrumb/template-and-customization":[{"name":"items","description":"<p>Defines the list of Breadcrumb items.</p>\n","type":"BreadcrumbItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#items"}],"breadcrumb/events":[{"name":"items","description":"<p>Defines the list of Breadcrumb items.</p>\n","type":"BreadcrumbItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#items"}],"breadcrumb/address-bar":[{"name":"items","description":"<p>Defines the list of Breadcrumb items.</p>\n","type":"BreadcrumbItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/breadcrumb/#items"}],"accordion/default":[{"name":"items","description":"<p>An array of item that is used to specify Accordion items.</p>\n","type":"AccordionItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#items"}],"accordion/templates":[{"name":"expandMode","description":"<p>Specifies the options to expand single or multiple panel at a time.\nThe possible values are:</p>\n<ul>\n<li><code>Single</code>: Sets to expand only one Accordion item at a time.</li>\n<li><code>Multiple</code>: Sets to expand more than one Accordion item at a time.</li>\n</ul>\n","type":"ExpandMode","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expandmode"},{"name":"expanding","description":"<p>The event will be fired before the item gets collapsed/expanded.</p>\n","type":"Event","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#expanding"}],"accordion/keyboard-interaction":[{"name":"items","description":"<p>An array of item that is used to specify Accordion items.</p>\n","type":"AccordionItemModel[]","link":"//ej2.syncfusion.com/react/documentation/api/accordion/#items"}]}